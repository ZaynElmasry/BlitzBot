This is a transcript fo Kevin Hale's lecture titled "How to Evaluate Startup Ideas"



Okay, so this is how to evaluate startup ideas. And this is actually a new set of content that we've developed based on a lot of feedback that we saw from the last startup school. And what we noticed is a lot of people's challenges. So last year's curriculum actually had a lot of content that ended up being, when we looked at the data for who's participating in startup school was like, oh, this is much more advanced. It's much further along. A lot of people for instance, like I had no idea or like they have too many ideas that they don't know which one to pursue. It was a main reason why a lot of people are only able to work on their startup sometimes part-time, yes, they might be stuck without resources but they didn't have conviction. They didn't know like, oh what would I have to believe in order to say like I wanna quit my job. 

This is also a really great sort of skill to sort of have because if you are realizing you need to pivot, how do you evaluate if you need to do that? And then also if you're pivoting to something else, like how do you evaluate whether something is worth going to? And if you already have a launched company, then you might have problems with like, why isn't this growing or how do I improve it? And evaluating your startup, especially in the way that sort of investors evaluate startups ideas, we find it's gonna be really, really useful. There's this like myth about Y Combinator is that people think YC only funds companies who have tons and tons of traction, right? That nowadays the only way to get the ycs, you have to have lots of revenue or tons of users already. And part of that has to do with like the press and then the exposure of the companies that make it the demo day. 

Those are the stories you tend to hear. But that being said, there's lots of great examples of companies who actually got accepted just with an idea. And so zenefit is a really good classic one. Parker was a single non-technical founder who pitched an idea to YC and he got in that way. We also had Reddit, so technically they were forced to pivot right away so they hadn't written a single line of code. And then my experience in in YC is actually exactly the same. So when I founded FU and we entered that second batch, we also had not written a single line of code PG had invested us at just the idea stage. And so I feel fully committed now as a partner to always be trying to find and dedicate time and energy to funding companies. We're just at the idea stage. A lot of our efforts here for working on startup school is to help us help you work on how to talk and think about your startup and that if we can fix that, it can help you sort of inspire us to be like, oh yeah, I can believe in what you're doing. 

And a lot of times founders get in the way when they're telling their narrative. So how can I predict if an investor will like my idea? That's ultimately what I'm trying to figure out. And the answer is really easy. And so for us at yc, the definition of a startup is a company that is designed or created to try to grow very quickly. So if you are not trying to build a company that grows very, very fast, then you're just building a normal company. It's a small business and there's nothing wrong with that. But these companies are the ones that investors are interested in. So if you're look hoping to build something that will have tons of users, that will have huge valuations that will be able to attract venture funding, then the evidence that we want is evidence that shows that your company can grow quickly. I have a confession to make. If you ever meet me or talk to me about your startup and kind of recruiting or at one of these events, I will never tell you that I do not like your idea. 

And there's a reason for that. It is not to be nice to you. It is not to blow smoke up your ass. I learned this way of thinking from Paul Graham. He says like, look, the average investor or a lot of the investors that you see when you talk to them about your idea, it feels like they're trying to poke holes in your idea. They're trying to figure out what's wrong with it and then they're like trying to show sometimes just how smart they are. And he explained that like his job and the way he sees our work at YC is that it's not to figure out what's wrong with the company but to figure out how it could possibly when, 'cause our betts, the ones that went are the ones that are non-obvious, right? And so for us to figure out the non-obvious stuff, it's going to not sound obvious when they first tell you. 

And so we have to like work on our imagination. We have to work on our optimism to figure out, oh what is the way that whatever story that they're telling me could become a billion dollar company? And then a great investor pitches that back to the founder. I figure out all the ways that I think whatever you're doing could possibly become big. And then I'm trying to convince you that this is what needs to happen so that I would have the evidence or that you will be on the right path to having a company that grows quickly. A startup idea is basically a hypothesis and this is the way you should think about it. It's a hypothesis about why a company could grow quickly and your job is to figure out how to construct your hypothesis, basically the pitch to the investor so they understand how it can go grow quickly. 

A lot of times people make the mistakes of trying to just accurately describe or over describe a lot of different parts. So I'm gonna break it this down. So just like a normal hypothesis has a pretty decent structure for this, this will hopefully help you sort of workshop like understanding, oh this is exactly all the reasons why this should succeed. And so even before we start even building anything, we can have an understanding of like, oh, here's the potential path of this company or here's the things I need to prove that show that this company could do well. So the first is the problem. So startup ideas is composed of three parts. The first part is a problem and it's basically the initial conditions you have to explain to me like what is the setting for this company that allows it to be able to grow quickly. 

The second is the solution. So this is basically what is the experiment that you're basically running within those conditions for it to grow really quickly. And the third is what's your insight? So what's your explanation why the thing that you're going to try your experiment is going to end up being successful? Those are the three components that I'm always trying to figure out when I'm listening to someone's pitch. Here's a tip for talking about the problem or to know whether your problem, your initial conditions are correct. The first is good problems. They're popular. So a lot of people have the problem. You want to avoid problems that there's a small number of people that have it. We like problems that are growing. So therefore the market basically like is it growing at a rate that like more and more people are gonna be having the problem and it's it's growing faster than other people's or other types of problems. 

We like problems that are urgent, ones that need to be solved very, very quickly. We like problems that are really expensive to solve because if you're able to sort of solve it, then you can charge a lot of money potentially. We like problems that are mandatory, right? So therefore it's like, oh, people have this problem and they have to solve it. And then we like problems that are frequent ones that people are gonna encounter over and over and over again and off and in a frequent time interval. So what you want to have is like some aspect of the problem that you're working on, at least one of them. And it's ideal if you have multiple of them. You don't have to have all of them, but it's one of those things where it's like if your company isn't growing or if someone's not as excited about the problem, it's probably missing some of these characteristics. 

The last one about frequency is super important because I like problems and you'll find a lot of other YC partners like problems a lot. That gives people a lot of opportunities to convert. Part of that has to do with some theory. So BJ Fog, he's a researcher at Stanford and he tosses his formula up all the time and he says basically if you're trying to change someone's behavior, you have three things you need to have in place. You need to have the motivation, the ability and the trigger. They need to all happen at the same time. So the motivation is like, I have this problem, I need to solve what it, whatever it is, the ability is your startup. And then last is the trigger. What's gonna be the thing that gets them to all of a sudden realize, oh I need to solve it with your thing. 

And so a lot of companies will have like, oh I, I need to, I build something but for some reason no one's signing up or like they're not using it, they're not engaged, I have no retention. And a lot of the times is because it's like you're hoping that they will somehow just remember on their own that they have the problem and to start using you. And oftentimes most companies don't send enough, for example, email notifications or triggers or reminders or figure out ways to come back into the app or figure out ways to be back in front of the user at the right time. And if you can't figure out those opportunities, it's really hard to get people to switch over to using your solution service or product. 

So our ideal problems are millions of users, right? Millions of people have it. That's why people like to work on consumer companies. That's why some investors like to focus on them. We like markets that are growing 20% a year. The problem is growing quickly. We like problems where people are trying to solve it right now immediately we like problems that just cost a ton of money. So billions of dollars, right? Or at least they all add up to some billion dollar total addressable market. We like problems where the law has changed, the law has changed and regulation has put up there and now people have to solve a bunch of problems. You saw a ton of healthcare problem healthcare startups were born after Affordable Care Act was passed. And a lot of that had to do with like there was now all of a sudden opportunity this problem that all these hospitals and clinics had to solve. And then we like problems that people need to solve multiple times a day or we'll use it multiple times a day. Facebook's a good classic example, but people also really love Slack, right? Because it's like, oh, I'm gonna be engaged in using it. I'm multiple a day during the Wake Workday 

Solution. So there, there's pretty much only one piece of advice I really have for the solution. That's the best advice that you can ever follow. And that is don't start here. So what I mean by that is at YC we have an acronym for problem that we try to avoid or basically an application that we have to go like, oh man, I wish they had started with a problem first. And we call it S I S P and it means solution and search of a problem. And often what happens is like you're an engineer, you're excited about technology, some new technology has come on the scene. Let's say it's blockchain, right? Let's say it's like react native or whatever the new thing is and you're like, I wanna build something with this. It's a large reason why you start working on a side project and then you go like, okay, what kind of problem can I solve? 

Now I'm, I want to use this no matter what. And then you try to shoehorn a problem into the solution. And what ends up happening is that's a much more difficult way to grow the company. It's not impossible for companies to grow this way, but it's super inefficient. It's much better to be like, lemme see what problems people have and then I'll use whatever is necessary to solve them and therefore it's much more likely that you will grow as a result. 'cause the other way around is you might have to go and try to drum up the problem or you have to like brand a problem as something that people have and it's so much more difficult and you end up growing much more slowly as a result. So look at what you're building right now or look at the reason why you're trying to do this startup and is it because you only care about the technology and building something in that or have you started with the problem? 

You go like, I'm gonna do whatever it takes to solve people, users, customers issues. The last one's a little tricky. It's what is the insight? What's the reason why this solution is gonna work? And this is where a lot of companies sort of get tricked up because it's, it's really about like what is your company's unfair advantage, right? Why are you gonna win versus everyone else? Why are you going to be the fastest one to sort of grow? Because that insight is what's needed for the investor to choose you over anyone else. And it has to be related to growth. You have to have an unfair advantage that explains why you're gonna grow quickly. If it's not related to that, then it's not. It's not gonna be something that an investor is gonna find valuable. And the last one is you need one you. You can't just be like, I have a problem, I'm solving it and then have no explanation why without that last sort of explanation. 

I can't use my imagination, I can't evaluate just solely on how well you've thought through this problem, right? And so let's go through the types of unfair advantages that your company have. So there's five different types and companies do not have all of them really great ones surprising, not surprisingly we'll have all of them and we'll go through two examples, but you want at least one and it's nice if you can have two or three, but for most of you it's probably just one. So the first one. So how do you know if you have a founder unfair advantage? And so all of these will be connected to numbers actually, which will help this make this really easy. He's like, are you one in 10 of all the people in the world who can solve this problem? Are you a super expert? And 99% of the people we fund at YC do not fall into that category. And so if you think it's like, well I'm a product manager at Google, there's a lot of product managers at Google. 

If you say you're an engineer at Microsoft, there's a lot of engineers at Microsoft, it's like great, but it's not one that will make me think, oh you have a greater un unfair advantage than someone else. If you've done a PhD and let's say you've done it on some kind of crazy biotech research and you have like a special patent to be able to cure some kind of disease, then you have a founder advantage your market is it growing 20% a year? Like by default, if you just build a solution in the space, you should just automatically grow 'cause you're just following a trend. If this is your only company advantage, then it's one of the weakest ones that you could have. It is great to be in that space, but you wanna have something in addition to this like you're gonna do like better than average because you've picked the right problem space and the right set of customers that want your problem. 

But again, if you're in a market that is stagnating or shrinking, then you're gonna have investors worried about the long-term viability of your company as a result product. So this is super simple. Is your product 10 x better than the competition? If it is, then you potentially have an unfair advantage and it has to be very, very clear. Someone should be able to look at your product and go like, oh shit, this is so much better than everything else I've ever seen. It is 10 x faster, it is 10 x cheaper it, et cetera. And if it's not an order of magnitude, let's say it's just like two x or three x. Again, that's nice, but it's not enough for an investor to go like, oh this is a slam dunk in regards to that 10 x product. And showing that you are able to have that later in startup school gonna do electron pricing and we'll talk things about cost and value and that'll help you sort of better understand is like oh, how to better prove out that 10 x multiple using sort of metrics and numbers and pricing acquisition. 

So a lot of people think that if you go to investor and you've done a bunch of Facebook or Twitter or Google ads and you show your CAC and L T V that you will able to prove that you have a sustainable sort of acquisition model. And I want you to know that if paid acquisition is the only way that you are able to grow your company, then I'm gonna discount that channel of growth greatly. That is because if you actually get really popular, you could actually start being someone significant, let's say becoming a hundred million dollar revenue company, then you're gonna attract a lot of competitors into the space and that advantage is gonna quickly dwindle over time. Blue Apron is a really good example of this. Almost all their acquisitions been paid and then once they eight through that, there's almost nowhere else for them to sort of go. 

You want to find acquisition paths that cost no money. And my favorite companies, the ones that become really great are the ones that can grow by word of mouth. This is a good percentage of the way they grow. And so in the early days of your startup, if you don't have any money, that's actually very great way of exercising. How do I grow this without having to pay for it? And so in the beginning we tell you to do things that don't scale, but this is what you sort of want to accomplish. It's like do I have an advantage that is free? And the last one is, do you do you, do you have a monopoly? And so we don't mean this in the monocle monopoly game sense. So we meet it as like as your company grows, is it more difficult for you to be defeated by competitors? 

Do you get stronger? And so a good examples of that are like companies with network effects and marketplaces where marketplaces where it tends to be a winner takes all a one company will tend to win. And network effects is just basically as my network grows, the strength of my company and the value of the product or service also grows with it. Not every company has it, but when you do have that, it works out great. There's something to keep in mind also, it's other things I'm looking to believe about a company and that is something that trips up a lot of founders. And so there's two types of beliefs that I have about a company. And so there's the threshold belief, which is like what's the default just for them to even succeed? So oftentimes for me it's like, oh, them building it, can they even build it? 

That's a threshold belief. If they can't even build it, none of it even matters. And so to me that question is not the most important. What will determine whether I'm gonna win the lotto is a miracle belief that like, oh my god, if I believe that they can do this, that actually going to be able to take off really well. And sometimes they're really simple. So if you are heavy engineering team or doing A B D B or enterprise startup, again the default is you have to build it. So if you can't even build it, then it's not even gonna work. So I don't spend actually a lot of time looking at that. For me, I'm trying to figure out, success will be determined by how well you can do sales, how well you can tell the story, how well you can actually convince customers and work through a sales process. I want evidence that shows that you know how to work through that and make that happen. And so all of my work with most of those companies is like not working on product. It's like, hey all, let's prove this other thing that if you have that, that'll be the thing that actually will help people go like, oh shit, they have this super combo. 

Let's go some some quick examples. So YC is a good one because we like to think of YC as a startup. So the problem, the way we'd word this is it's hard for founders to raise money without knowing someone in venture capital. So at the time it was started, you basically had to be an insider and that was the only way you can sort of get money. And that super sucked. And the solution that basically Paul Graham came up with is like invest in companies through an open application. You don't need to know anyone, you just tell us your idea, tell us a bit about yourselves and that should be enough for you to get funding. Now there's a bunch of unfair advantages that YC had. Number one, the founders are pretty incredible. So Paul Graham had wrote a textbook on lisp, R t m like wrote the very first worm. 

He's like amazing programmer. And they had built and sold the first SaaS company that was via web to Yahoo. So they were kind of experts at both evaluating technology and also understanding kind of startups. In that whole process, the market basically believed that future billion dollar companies would be technology companies, they'd be powered by software. And the wonderful thing about tech companies, especially at that time was Moore's Law was making it cheaper and cheaper for software companies to be started. And they for they needed a whole lot less money and he could make a lot more betts as a result. The product. So basically, you know they pay the founders that come for three months, they get some advice, they work on their product for a relatively small amount of money and then at the end of the time, instead of offering coworking space, they work from their own home and then they pitched to a bunch of different investors. 

And the idea was like that would be so valuable to a potential founder who had no connections, that it would attract a lot of really great minds or a lot of people who are hungry to get into the space, the acquisition. So most people don't realize this is like PG was able to sort of build up YC and attract the right talent because he had a huge reach or audience when he got started. He had written that textbook, yes, but he also wrote all these popular online essays and had a large audience of his target users hackers to come and evaluate his product. And you can acquire them relatively cheaply just by baking a website and letting it be known. And then the last one is something he didn't even realize when he started yc and that is that as the YC alumni network grew, it got more powerful and more valuable over time. 

The results are funded thousand companies, there's 4,000 founders, they're the CEOs of some of the biggest companies in the world. They are over 15 companies worth a billion, do over a billion dollars. There's 93 companies with over a hundred million dollars and our total market capitalization is over a hundred billion dollars. I'm gonna do one more example with you guys. So FU this was my startup and it's an online form and survey builder. And so for us it was basically every website needs to collect some kind of data at some point, but you need to know how to code or hire a programmer to be able to do it. And so the solution was to build something that what they see is what they got. Like basically a drag and drop visual editor and that any non-technical person sort of create. And then if we did that, we would solve that sort of specific problem. 

So very quickly, the market, it's kind of ridiculous. Like we were asked in the early days, calculate our tam, but it was like every website needs to, I don't really understand like what website doesn't need to form. Eventually it allowed us to grow really, really quickly. Our product was easily shown to be 10 x faster and if against the direct competition with other builders because it was so much faster to do the drag and dropping and visually see. And then it was usually a hundred x faster than like a lot of traditional routes for very custom forms for hiring a programmer and very cheaper because we had this freemium model that also led to an acquisition on unfair advantage. And so we actually had started off with building a blog and building an audience as well. Started off with a hundred thousand developers subscribed to our blog. 

We launched out to them after building up that audience for a year. And that's actually what we applied to YC width is like we had built up this audience, we had proved that all these other things are like in place. And then part of the other acquisition model is that you could embed these forms on people's websites and then our users basically spread our form and software for us as a result. So we never had to hire any salespeople. And the results are our product was used by every industry market and vertical. You can imagine tons of super large companies, and we did this with a relatively small amount of team. When we were acquired, we were weird outlier compared to all the other acquisitions. The average company raises only raises like $25 million before an exit and this is their average return. And for FU, we only raised 118,000 bucks for the whole life of the company and our returns were over 30000%. 

Okay, so in the end, this is very simple exercise, but super enlightening once you actually go through it and to try to figure out that narrative and story. So I turn it back to you, go through and try to answer those questions about problem solution, your unfair advantage. Figure out where are my holes? Do I have one? And then the question becomes, oh, what do I need to prove? What do I need to work on to make that happen? Your startup idea is a hypothesis about why you're going to grow quickly. For our next lecture, we're gonna talk about the first ways we try to prove it out to to basically test our hunches. And that is by talking to users.
