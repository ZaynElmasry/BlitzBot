This is a lecture transcript of Eric Schmidt on Structuring Teams and Scaling Google, followed by a Q&A



Host: It's my great privilege that we have Eric Schmidt with here with us today. Actually, on the topic of Blitzscaling, there is nobody higher in the world that I would like to talk to at the subject than Eric, right? He has literally done it in the most serious ways possible. He thinks about these things in theoretical and deep ways, and actually teaches his own class on entrepreneurship and everything else. So it is with great pleasure. Why don't we welcome Eric and then kick it off. So, I don't know if everyone knows that you had a, you know, kind of a, a substantive career before Google, since they all know about your career at Google, first at Sun doing very hardcore tech stuff, and then Novell, what did you learn from those two gigs that you took with you to Google that was really helpful and essential for Google? 

Eric Schmidt: So, first, thank you for having me, and obviously I support what you're trying to do at Stanford and in fact, all of your activities. And there's nobody I work with. There's more clever and insightful on most of these issues than than Reid Hoffman. It's interesting that yesterday I went to visit my old boss when I worked at Xerox Park, whose name is Bob Taylor. And to talk to somebody who is the person who funded the arpanet and ask him how did he do that? And the person who conceived the personal computer and who did you work with, gives you a reminder, reminder of both the extraordinary and the awesome things that have happened in our industry, and also, frankly, how old I am, right? This is my conclusion. So, so my history is I'm a computer scientist, a PhD from Berkeley, and, but I've been around here for almost 40 years and working at Xerox Park, I went to Sun. 
And one of my sort of rules as, as a sort of first year man, first young manager, is that as a young manager, you absorb everything. So my manager at Xerox, Bob Taylor had a particular management style, which I now realize 40 years later is kind of like mine by the way. I approach things. And my first impressions of being a Sun manager and the way Sun worked, I think colored the next 30 years of development. And so one of the things to remember is that the next five or 10 years of your careers are in fact crucial, because that's when you learn all that shit, right? And that, that all sort of where you are and the people, you, the sort of, the little subtle things that make leadership happen are learned during that period, which was a surprise to me. So at Sun, 
We had, 
Sun was both very tumultuous, very political, and very complicated. There were many, many good things that I learned, and I also learned some real negatives. One of the things that I learned negatively is that companies can reorganize prematurely. Companies can become, religious companies can not react to actual facts. The low point in my time at Sun was we had a meeting where we were looking at sun computers versus PCs, and we concluded we could not get our manufacturing costs equal to that of PCs. Now, by the way, that's a signal that you should quit because I failed to answer the question that I advocate now, which is what does the next five years look like? So one of the sort of things we talk about in my other class in the M B A school is ask the five year question, right? And I learned that sort of the hard way because for most of my life, the answers were given to me or they were highly narrow. 
So now I ask, what's gonna happen in the next five years? What's gonna happen in the next? And I learned that. So anyway, after 14 years of sun, lots of politics and so forth, I did the Java maneuver, which you can talk about if you're interested in, I went to Novell under the mistaken idea that I wanted to be a C E O and I failed to do any due diligence. So had I done the due diligence, I wouldn't have taken the job, and therefore I would not have gone to Google. So it was probably good I didn't do the due diligence. But at Novell, there's a, there was a week, which, which we remember, my, my colleague and I, who joined me with me said was the worst week ever where we, our basic goal was to get out of this with our professional reputations intact and not in jail, right? 
And that's after you join a company and you discover the books are cooked and the people are frauds and the customers aren't paying, and so forth and so on. But I, in hindsight, what I learned something, which is that you can actually overcome that. And the skills that I developed in Novell, in fact allowed us to do things at Google. And so what happened when I showed up at Google made a long story short, there was that companies very, very interesting, very innovative. But because I'd had such a tough time at Novell, I understood the role of cash. And so we did everything we could to run the company for revenue. And the rest is history. 

Host: And is there anything other than maybe telling yourself to, not one time, not do due diligence, but other times do it for the obvious thing of getting to Google. If you go back to your younger self, is there anything you would've told yourself to do differently? Prego, 

Eric Schmidt: I think all answers of that category in our industry are to do things that you did sooner and to make fewer mistakes. So in, so in hindsight, I would always have made the right decision faster, and I would've made fu fuer mistakes. And I wonder, what is it that causes me to not make the decisions quickly? And by the way, I continue to have this problem. So it may just be that some people are quicker decision makers than others, and it's not obvious that you have to make all the decisions as quickly, but in hindsight, you would judge them all that way. And every executive in every business class and every management class will say the same thing, which is, I should have fixed this earlier. I should have fired this person sooner. I should have cleaned that up earlier and so forth. And that's why businesses are not like the government. We, none of that ever happens, 

Host: Right? Or very little. Yeah. So let's go to Google. So you, what was the employee size when you joined Google? 

Eric Schmidt: About 150, right? And what, what I should tell you the story with Google is that Larry and Serge had taken funding $25 million from two venture capitalists, who Oh, thank you very much, Peter. This, this, by the way, delivering the Diet Coke is Peter Wendell, my co-pro professor. Thank you very much, Peter, in my business school class who's joining us for a minute. And we hope to steal all of your best ideas for our class Reed. So we're clear. That's why we're here. Just so we're clear with pleasure and honor, the, so what happened was the venture guys had said, these two young men are brilliant, crazy and unreliable, and they need a proper c e o. So the two young men agreed to hire a C E O as long as they could vet them. And so their vetting algorithm was, they had to spend a weekend with the two of them. 
So each candidate would do something for the weekend. So they took some of them skiing, some of them boating, some of them had to go to the various farms, they went to New York once with somebody and so forth. This guaranteed no one was gonna get hired. So I was eventually called by John Doer and I said, well, I'm really not gonna do that. But it turns out we met and it was pretty obvious. We agreed. I made a list of things they had to fix. They had to fix them, and the rest happened. Yeah, what's interesting about Larry and Sergey is that they had both been here and we had, they'd had the same professor 18 years later. So we're far more similar than we would like to admit. Got it. Similar backgrounds. 

Host: So joining at a hundred, 

Eric Schmidt: Yes. We have a, we, we have a, we have a question. It's funny 
If you can remember some of the things that are on the list. 
I have the list 'cause I save everything. Remember, this is Google. You know, when you think about a small company, almost all of them have the property that they're full of energy and no process. And they get to the point that Google was at by just sheer force of energy, hard work, and figuring stuff out. So my list was pretty straightforward. International expansion plans, sales plans, hiring plans. Is the money real proper accounting? Do you understand where your inventory is? In this case, Google didn't have any development plans, 18 month product plans, none of which existed. When the, the first meeting I was in at Google, it was like being in graduate school in a university full of very interesting conversations without deadlines or deliverables, right? Which sort of the style and much of the Google culture was developed out of the graduate school of Stanford. 
In other words, the offices that four people in it. 'cause that was the office that Larry and Sergey had in, you know, that kind of, it felt very much like that. And it turns out when that kind of raw material, what I figured out is all you have to do is ask questions. You know, like, what's the plan? I go, oh, you know, then, then an answer comes out. And it's not that they don't, it's, it's not that they haven't thought, well, it is that if you push them, they can develop a plan. It's just they didn't think it was important. It was more interesting to talk about this. And that's where the raw talent matters. 

Host: Actually, just as an elaboration on that, what advice would you give? So how, how does the partnership between young ambitious, highly talented, super smart founders and new people coming in, what were the key things to, to make that work really well? Well, 

Eric Schmidt: I was well aware of this John Scully Steve's job story. And you all are too young to have lived through it. But the fact of the matter is that jobs needed somebody to be the c e o. The board picked Scully, the two had a fight. Scully went to the board. The board had to support the c e o. 'cause if they don't, the c e O quits and the rest, the rest happened. Eventually Steve left formed a company called Next. And then as you know, he very cleverly ultimately got himself acquired. And then within a month or two, got the c e o acquired him, fired and replaced the entire board. By the way, that's, that's a Steve Jobs moment. You know, it's, that's very hard to do, certainly for you and I, right? I mean, that's like an amazing achievement in and of itself. 
And, and you know, it produced the most valuable company in the world. So, you know, it's clearly the right choice in hindsight. But I was very, very aware of this issue of founders and, and the outsider. And I understood I was a, the outsider. So from the moment I started, I knew it was their company. And I didn't get confused. It's their company. It's their company, it's their company. So what does this mean? I refused to do any press. And so as young executives and all sorts of press, they really enjoyed it. They had all this picture, they went cover on time and so forth and so on. And then they, right before the I P O, they did an interview with Playboy. No, no pictures. So we're clear. And the interview with Playboy was on roughly February 20th or April 20th of that year. And it turns out that the interview was at the wrong time in the cycle of being pri quiet, quiet period. 
And it put our i p o in jeopardy. So I still remember in August of that year sitting with them and saying, you know, these are my closest friends, my colleagues, I really care deeply for them. And they have those long faces that people get on them and they say in uncharacteristically, they said, well, did we screw up? And I, and the correct answer is, yes, you really screwed up. But the even more correct answer is no problem. Easy mistake to make. I would've made this mistake. And we papered it over in a legally correct way. From that moment on, they're given no interviews 
Really, really from that moment on, 
From that moment on. Now that was 12 years ago. And so what's what's interesting about the, that psychology is it, it's somehow as young as young executives, they wanted it, but once they didn't want it, it was fine for me to do it. But intuitively they need it. It is their company. It's not my company, right? I'm the professional that was hired. They're the owners, they're the founders, it's their company. And if you get confused on this point, right, you're not gonna win. Yep. Right? Yep. Nowadays the founders are much less likely to offer control the way said PR Omaar offered it to Meg Whitman. You know, there's an increasing sort of view of, of their own ability. And that's fine too. If you look at Facebook, it's worked really quite well with Mark who's brilliant and young. By bringing in someone who is much more experienced in many, many things, Sheryl Sandberg, that partnership worked extremely well. So it's, there's not one answer, right? 

Host: Yep. So joined a hundred, it's now over 50,000 people. 

Eric Schmidt: 60 plus thousand.

Host: 60 Plus thousand. A classic example of, of Blitzscaling, matter of fact, there was one year, I think it was 2004 to 2005, you over tripled the number of employees in that year. 

Eric Schmidt: I, I do have a saying about this. It's easy to double, it's very hard to quadruple every year, right? And I, I, and it's a bit of advice. It's, you can double, you can kind of see it, you can kind of, okay, I can add in another person here and I can add another person and then, you know, I can expand in this country and so on and so on. But to quadruple is almost impossible. Yeah. 

Host: So, so what were the kind of, 'cause you had to invent a lot of these techniques, right? These hacks, I mean, everything from the three of you reading every resume to, you know, keeping innovation going with 20% time, other kinds of things. What were the, what were the key hacks that worked and the key hacks that didn't work? 

Eric Schmidt: So I, I, I wanna offer a cautionary tale. And again, having both read your book and also the notes that you kindly sent me before this, if you don't understand the subtlety here, you would, you would conclude that the correct thing to do is to grow everything as fast as you possibly can everywhere, right? So let's just make as many engineers and as many salespeople, as many products and so on and so on, that completely does not work. And it doesn't work because no product shall ship before it actually works, right? And the way you build great products is you have small teams with strong leaders who obsess over trade-offs and they push things off and they say, we've gotta get it done. And they put a lot of pressure on the team and they work all night and they produce a product that just barely works. 
Okay? The original use non-Google examples, the original iPod just barely worked. Look at what it became. Try people remember the original iPhone, no apps, right? Everyone's forgotten that just barely worked. But it just was just the right combination to create an enormous franchise that's now 70% of the revenue of the world's most valuable company. I was talking to Travis Knik, we are major investors inside of Uber. Uber, so we have good relationships with Uber. And his description of Uber was that he understood scaling, but the product, the app wasn't ready. So, so you have to sort of have judgment about when the product is ready to scale against it. And so we, we would debate this over and over again. And so Larry ands would play tricks on me. So a typical example would be, I would say we're not strong enough to take on Microsoft. 
And they wanted to do an operating system and a browser. And I said, there's no scenario where we'll ever do an operating system and a browser and 'cause Microsoft will kill us then I don't wanna get Gil, we're a small company and yes, yes, you're very smart and yes, yes, we're full of smart people and yes, yes, we have lots of revenue. These guys can kill us. 'cause I'd been previously killed in the previous jobs. And so they hired somebody to in, to improve the performance of Firefox. Six months later I'm called down to one office and this person who is supposed to improve the performance of Firefox has managed to invent Chrome. 
Shocking. And I say, well, how long have you been doing this? Well, I've been doing it on the side. No you haven't. You've done it full time. Well, yeah, you know, I had three other people. Okay, well how many more people do you have? Oh, 10 more people. Well, did Larry, okay, did Larry and Serge know about this? Larry s encouraged it. I said, those assholes, right? You know, it's just, I knew it, I knew they were going around me, right? Okay. So, and then I said, well, we can't do an operating system. So they bought this company called Android. And they said, yeah, yeah, yeah, it's just for smartphones. It's, it's software for smartphones. Don't worry, Eric. 
Today Android is 1.4 billion. Op 1.4 billion plus operating systems use largest number of operating systems in the world. Chrome is the lar the largest and most successful browser. So I, again, maybe the lesson to learn in management is, I'm just wrong all the time. But, but the secret was, you, you sort of, you, you have to have judgment as to when these things can scale, right? And I can give you plenty of negative examples. An obvious one is wave, right? It was a complicated email product that we launched to great fanfare and we watched its adoption rate. Marissa had this rule, which is a good rule that you cannot, at Google, you cannot tell how successful a product is until the first six months. 'cause what happens is you get this adoption cycle and everyone loves the product. 'cause everyone tests it. And then you watch what happens. 
And the great products, you know, they're bumpy, but they go up, well, this is what it looked like, like this. So it took Eric, your friendly c e o 18 months of going down straight down before that project was canceled, right? So again, lack of due diligence last. So the, the reason I'm answering your question and the, the, the blitz growth argument by saying you've got to have the products that you can scale. Yep. If you have the products that can scale, the thing that's new is you can scale very quickly. The Uber example, once you have an app and a business model that more or less works, there's no reason why you shouldn't go global and wide. When I started at go at Google, I, I sat, my first concern with Google was I thought the whole thing was a sham. The company was using QuickBooks for its accounting, and I was convinced that there were errors. 
So I, I asked to be shown the, the actual cash balance in the, in the bank. There was in fact cash in the bank, which was shocking to me. So then the sales guy, his name was Omi, who's now just gone off to Twitter, I said, okay, well where's this money coming from? He said, well, we have Salesforce, we sell these ads. Who clicks on these ads? Well, nobody, well, okay, whatever. It must be some fake thing. So we investigated, we decided people really were clicking on these ads. So I said, well, how many clicks do you get outside of America? And he said, well, none. He said, well, no, you have lots of traffic. So I said, leave and go to Europe and don't come back until you have sales operations in Britain, the uk and France. Which is a strange thing to say to somebody. 
So this is a month after I'd started. And so he left and he came back in three weeks. Having set up those operations today, the operations he set up contributes 60% of the profits of a $60 billion corporation, right? Yep. So in hindsight, I should have done it a month earlier, right? Think, think about the compound, the compound value of that decision. Yep. So there's a point when you keep it small and there's a point where you expand, and when you expand, you grow very, very quickly, right? And it has to be replicable. So let's using Uber as an example, always the favorite example. 'cause everybody understands Uber, as I said. Do you believe that the Uber model scales well outside the United States? Well ask the French, okay, the French love it, but the government hates it, right? So they need two problems. They need a scalable app and they need a scalable negotiation strategy with the governments, right? So now you can guess how far they'll be, right? Google had the same problem with China and we lost. So what any heuristics for when the product is right for scaling? Well, I have another opinion about this. And if you think about the greatest products, they've almost always been designed for the benefit of the people who actually are building them. 
And so the Uber story, they built this to share apps. And in fact, the original Uber was a, a private sharing group. Larry and Sergey built Google for Stanford and particular for themselves. The server was in Larry's dorm room and they needed a second server. They didn't have enough power. So they ran in the cord over the room into the gentleman next door, his dorm room. They opened up the server for the entire campus here. And the usage was phenomenal. Andy Bettelheim heard about it through David Cheran. He wrote a hundred thousand dollars check. They didn't have a name for a company. He wrote the check. He, he gave it to Sergey, Sergey put it in his wallet without a name on it for a hundred thousand dollars and left in his wallet for a month until they had the name Google invented, right? They moved into Sergei's, girlfriend's sister at the time, then wife, ex-wife. The long history of of life, life there house, which we now own, where they set up these servers in the, in the garage. And they slowly took over each of the bedrooms. And this poor woman who I think was pregnant at the time, kept saying, the baby's coming. The baby's coming. They put Google world headquarters in one, in the baby's room, right? So the rest is the, the rest happen 

Host: Is, is so, but then is the heuristic. You already see such impressive demand, you know, you have to keep up with it. Or sometimes the heuristic simpler or different than that 

Eric Schmidt: In order. I, I, it's easier if I give you a latch. It is tempting to believe that you have a product that works before it works. And the error that's made, especially by non-technical people, is they believe what the engineers tell them and then they prescale for a product that doesn't work very well. So think of it in a different way. Think of it as, I'm gonna raise money from you. 'cause of course you're a very famous venture capitalist. I'm gonna, I'm gonna take your money and I'm gonna do everything I can to build a great product and you're gonna be all over me. Where's your international strategy? Where's your sales strategy? And I'm gonna say, read, just stop product doesn't work yet. I'm saving your money. 'cause I know in today's market, the moment I have that product, I know I can hire a sales and marketing and evangelism team in a week and I can do it globally. 
That's the difference. So think of it not as, as the, the mesher that I described here, but rather as a, as a funnel, which is very tight. And then there's an a global expansion period. And I think that's the essence of what you're trying to say in your book, which is, there's a point where the sum of all of this, it's like this huge push, right? But you have to time it right Now, how do you know? Well one is people use the product itself. Let me give you lots of failures. In my case, let's use wave. Nobody at Google used Wave, okay? 
Other people did. They were, and by the way, they were really nice and really energetic. They're not using it anymore. They were just like caught up in the hype, right? How many people do you see walking around Stanford using Google Glass? Anyone here wearing Google Glass? I don't see it. Okay, let's go, let's keep going through the list, right? Yeah. Again, maybe, maybe it's just we, it's just we're at version one and we need version 1.1. Maybe we need just a small change and then boom, right? Those are two examples. You can pick hundreds of examples in Google. Thank goodness we've all forgotten them. 

Host: So once you have the product market fit, that works sufficiently. Part of the thing that I think we do here in the valley, China does, but it's actually relatively rare, is figure out how to really build fast into that global opportunity. And some of those techniques were things that you guys invented. So what was the stuff in order to be able to, 

Eric Schmidt: Well, I wanna talk a little bit about hiring. Yeah. Before your excellent book, Jonathan and I wrote a book called How Google Works, and a third of the book is on recruiting. And I wanna give Sheryl Sandberg credit because when she was with us, she set up a lot of this. There is a way to systematically hire better people than anybody else. What Bob Taylor, who I interviewed yesterday for a new book, I'm working on the future of everything, which involves looking at the past of everything said was sell the dream. So here's, here's how he funded the ARP net, right? He called up people and he described what he wanted and they either got it and got incredibly excited or they didn't. And if they didn't, he just went to the next person. 
How, how hard is that? Well, if your idea's pretty good, if, if the person is sufficiently dull that they don't get it, then are they gonna get it after some persuasion? Probably not, right? You want somebody who's quick, one of the things you say is hire generalists, right? And, and so, and we in, we we in the form of Larry and Sergey to start with had very strict rules. And the, here's a typical example. I would go in and I would say, Hmm, we need some experience in this layer in this area and we need some people who can program in Java and S Q L and various other sort of X ML protocols, which I was very familiar with in my previous jobs. And they would say, that's the stupidest thing we've ever heard. No one would ever wanna use Java or any of those kinds of things. 
They did this partly just to annoy me. And I said, well, who do you wanna hire? I said, we wanna hire incredibly intelligent people. Well, so do I. Okay, you're implying that people working on this stuff I care about are not very intelligent? And they would say, no, no, no, no, no. We wanna hire incredibly intelligent people. Incredibly intel intelligent people would figure out that the stuff you're talking about is stupid and therefore you should work on the right thing. Okay? So we would have these debates, right? And, and it's all in great fun, of course. And by the way, today we have thousands and thousands of Java programmers, just in case you're worried about it. But they're, they were actually making a a different point. They were making a point that you hire people who can get the job done. That the, that the industry overvalues experience and undervalues strategic and intellectual flexibility, which is the point you make in your book. 
And I feel very strongly about that. You're, and, and the, there's an easy way to understand this. I'll tell you, in all the issues we had at Google, I realized that I had no idea what to do. I am, after all the ceo, I'm supposed to know what to do. I have no idea what to do. But I knew I had the, by far, the best team ever assembled to address them. Examples would be dealing with the then competitors at the time, the shift that we did in our business from one way of selling to now what is called a victory auction or second price auction. I'll give you an example. There was this fellow named s who was a biology undergraduate here who looked to me to be about 21. He's actually older than that, but he looked very young. And so one day he announces we're switching our entire revenue system from a as sold model by the Salesforce to an auction-based system. 
And I was convinced to remember that these things were being oversold, that they weren't very worth very much. And our sales guys were so incredibly good that they were maximizing the value to the point where the price was too high. So I said, well, I'm not sure, but we, we won't get there with salespeople. We have to have an auction. And I said, okay, whatever. And Larry Ander were on his side. Anyway, so I got so worried about this. I put in place a program in the first year, which I called the, the cash restriction program. You can imagine the acronym. And we would only spend money at 10:00 AM on Fridays. 'cause I figured that way I could control the amount of money. 'cause I was worried we were gonna go bankrupt while this very, very young man implemented this auction. We turned on the auction. 
I'm terrified. And the revenue triples in day one. Of course we completely forget the, the whole program. And I'm saying, you're telling me that our incredibly talented sales force is underpricing our product by a factor of three, right? So then I immediately call the sales guy and say, what are you doing? So, so sometimes, I don't know whether that's luck or scale, but it showed you in, in seller of course a brilliant man and a person who really is responsible for the architecture that drove, that drove the $60 billion. You need ideas like that, that scale so fast. And, and let me put in a pitch for my current best idea, which is machine learning. And in the careers that you all will have and in the companies you'll found and so forth, machine learning will be the way in which you get that multiplier and the the, for the non-programmers in the room, the way to understand this is that programmers like me were taught how to write algorithms that precisely specified a methodology. And we got really good at it. And we're, and we're very proud of it and we're very arrogant. Okay? A new set of programmers understand how to have a computer learn something and then the learning model is applied to this problem. And that's a very scalable model and that's gonna produce immensely larger companies than the kind of companies we're talking. And the, the speed will be immense because once you've learned something, the scaling can occur globally in a, in a matter of hours. Yep. 

Host: Or even necessarily quicker. Yeah. So hiring, does there stuff that you want to go into how you did hiring particularly 

Eric Schmidt: Well? Well, well we had a whole bunch of reasons. One of the rules is that we didn't wanna hire your friends, which always was upsetting. We also didn't wanna hire anybody from what were considered to be lesser universities. And so we also wanted to hire people who had very high GPAs. So I, so the constant problem was that somebody was a good employee, had someone they had worked with who was very loyal, very hardworking, who was not from a great university, did not have a good G P A and we would not hire them. So that was controversial and we've relaxed that a little bit now. But the fact of the matter is it got us to where we were today 'cause it produced these high IQ generalists from prestigious universities. That's the way to understand this. The second thing is, one day we were looking and when I, when I was at Novell, I had learned that there were people who I called glue people. 
And the glue people are incredibly nice people who sit at interstitial boundaries between groups and they assist in activity. They're glue and they're very, very loyal and people love them and you don't need them at all. And at Novell I kept trying to get rid of these glue people 'cause they were getting in the way. 'cause they slowed everything down. And every time I'd get rid of in one group, they'd show up in another group and they'd transfer and get rehired and all that. So I was telling Larry and Sergey this one day and Larry said, I don't understand what your problem is. And I go, well, I said, well, why don't we just review all the hiring? And I said, what? And they said, yeah, let's just review all the, all the hiring. He said, really? He said, yes. So guess what? We start from that moment on. 
We reviewed every offer packet. Literally everyone. And anybody who smelled or looked like Aloo person plus the people that Larry and Sergey thought had backgrounds that I liked that they didn't would all be Flacked. And so, so anybody who sort of met the original profile, they'd go right through and we'd have this huge argument. And every once in a while we'd have arguments that were sort of specious. I remember one argument about a fellow who, one of the founders did not like his last name 'cause it was too humorous. You know, so, so, so you add a little, and by the way, we hired him. So you can imagine you can have some fun with it. But fact of the matter is because we never fire anybody, the hiring decision is crucial. And the, the, the, the people you hire to define the culture, whether you like it or not. 
So Larry and Serge, when they started the company said, we need to have really smart people. So they hired a rocket scientist and a and they hired a medical doctor and they hired a, a Stanford graduate who had been a professional football player. 'cause they figured that they wanted normal people who had done something exceptional. So in my case, I was a pilot and I had done other things and they said, okay, you're good enough. You know, the c e o has to have something besides being a C E O that makes them interesting. And everyone had something. And I would go around and I'd say, well, what's special about you? It's like, let's, like Sesame Street, you know, what's special about you and what's special about you? But there was always an interesting story. So another lesson I learned is that you don't hire generic people. You hire people who've had some kind of a, of stress or achievement or whatever. The best people hire, by the way, are CFOs who've gone bankrupt because boy have they been through the war. And on the C f o, on the C f O side and the finance side, you want somebody who's not gonna happen again and you only go bankrupt once by the way. Yeah, 

Host: No, exactly. Now, now the interview process, as I recall from early Google was fairly involved. 

Eric Schmidt: Oh, yes, yes. So the interviews, well, so anyway, finish that. 

Host: Well, I mean it's precisely that is is was that a good thing, bad thing, mixed thing. So was definitely a deliberate thing. 

Eric Schmidt: Okay. So once we decide we're gonna review all the packets, then we have to figure out how to score everybody. So we put in a scoring system and asked people to score and they were scored between one and five. So Sergey said, well the problem here is that these scores will be biased. So we put in a, a statistical measure where we would look at the average weight of the scorers and then correlate that with the future performance of their, you know, their scoring. So, so a year later we would look back and say how we had graded that employee versus the way you had rated them. And oh my god, guess what we discovered that if it's a woman, the female is scored with inverse correlation to her performance, right? It's the most extreme evidence of male bias against female candidates. We're sitting right in front of us. 
How could this be? I mean, this is as liberal a company as we can full of guys. Well it's, it's called unconscious bias. Now we didn't have the term hidden bias. Hidden bias, excuse me. So we, we, we in fact changed the entire way in which we run the recruiting for female candidates and so forth and managed to correct that. So there's an example where something that even as, as liberal and analytical companies we had, we didn't realize we were doing. And, and this is now a decade ago, so we, we did the good news is we corrected it. But it's an interesting story that even the best meaning people can have these kinds of biases. So anyway, so we would do this scoring and then we had the problem of people being interviewed. And so I still remember this packet, this gentleman who we'd interviewed 16 times and the person who was running this process had come in and said, look, you guys have gotta make a decision. And the recommendation was to not hire him. And I, I said, look, you just can't do this anymore to people. So I said, you cannot interview people more than eight times. 

Host: Okay? 

Eric Schmidt: They have since revised the statistical metaphor that for engineers they have five interviews and for non-engineers they have four. 

Host: So it's the main, 

Eric Schmidt: And that turns out to be statistically significant. So very interesting. You can systematize even that. Yeah, 

Host: Well 'cause as I actually recall, the way you did that is you actually looked at, when was the score drop off, no longer predicted. 'cause you were taking all that and you said, okay at this interview. Exactly. That's, yeah. And that was, 

Eric Schmidt: But but those are, those are simple techniques that wouldn't have occurred to the normal company. But because we'd hired all these smart generalist types with obnoxious degrees from famous universities that were obnoxious, you know? Yeah. Whatever stereotype you want, they applied an analytical bias. Yep. So we did the same thing. We did an analytical bias to facilities and to cash management and so forth and so on. So during this heyday, we made very sure that our marketing was disorder. So I used to call this the lava lamp pitch. So what we would do is we would show you around all those incredible things we were doing. We'd show you all the lava lamps, say it's complete chaos. People can do whatever they want. Which of course is completely not true. And so if it was somebody important like a shareholder, I would say, oh by the way, there's another half of the company that's run incredibly rigorously with goals and so forth and so on. That produces the results. So you wanna distinguish between the marketing and the reality of how you manage 'em. 

Host: Speaking of management. So growing an organization that's fast is a nightmare to figure out how to manage. Like who do you promote into management, how do you run it? So what were the things that worked and what were the things that didn't work? 

Eric Schmidt: Well, I had had negative experience at Sun in Divisionalization and operating companies and things like this. My position was pretty simple. Laer and I are running things. It's, it's chaos anyway. We're just gonna run it as a group and run it as fast as we can. So we would have a meeting on Monday, which was called 60 Minutes, which always took two hours and it was called 60 minutes. 'cause you had to be offline and off your computer for 60 minutes. And if you were found in the time typing on your Blackberry, there was a 25 cent fine. And we used to call this the prayer 25 cent. Well it's a cheap place. So and so people would be on their blackberries underneath this and we would do blackberry detection. This strategy eventually failed by the way. And it turns out it was impossible to get people to get off of their computers for one hour per week. 
Another example of a strategy that didn't work for me. So on Tuesdays we had something called a Google product strategy meeting where we would review, we would use that as a checkpoint With so much going on that we, we realized we were launching all these products and no one knew what they were launching. So we put in a launch review process and you had to have, you could not announce something without going through a launch review a week before. And that was sort of the way in which we caught the problems. And inevitably the problem was the engineers were doing something that they hadn't told the support people or the lawyers about. My best example here was the fellow who walked in and I, I very young, probably early twenties and had added, taken one of our products and added the ability to geolocate where your friends are and predict where they were going to be and where you were going to be. 
And he puts this demo up and I, my like, my face goes ashen, right? And the lawyers are going, oh my god. And the market, people are going, oh my god. And Larry and Sergei loved it and they went, and I still remember this went on and we had a schedule and of course he was blown and we're in there for two hours and they're just screaming about how incredibly brilliant this product idea is and how wonderful this is and what was wrong with me and so forth and so on. And I pointed out that there's this minor problem that such predictive behavior is almost certainly illegal. And in any case, even if it were, I don't wanna deal with all the real time subpoenas that are gonna come in because now we know not only where you were, but where your friends are. And we have it all in one database. 
And I said, look, you know, we can't even afford the lawyers to do what the current subpoenas. So the great thing about Google is after you have one of these, and, and by the way, just so we're clear, Larry ands, were doing this for effect. You know, they were just trying to be disruptive and have, and have a good time. And this is part of the style, part of the culture is to draw this out to be provocative in a good way. It's healthy. I'm saying this in a good way and I think it was a very healthy process. So guess what the solution was? This particular product, you could actually pin it and lie as to your location, which makes the legal records unreliable. We launched it. You see another example that we had Latitude. Yeah, I remember Latitude. And then another example is that we were having, this was back after I discovered we were doing Chrome and we launched Chrome and it was beginning to be successful. 
We had a debate over HTML five and the exclusivity of browsers and the rate, which we put stuff into the browsers and so forth. And at the time Chrome was not the number one, it was well behind Safari and Internet Explorer. And so we have 20 people in the room and we are having this argument and all of a sudden it's pretty clear that Sergei is not gonna give up. Right? He's absolutely convincing. I disagree with him and Larry disagrees with him and me and it, we had a rule that the three of us, that we would not have huge arguments in public. So, which of course we did. Anyway, so, so I realized, so at that point I kicked everyone else outta the room and the three of us had it out. We clearly didn't agree. And I said, look, you guys go back to your office. 
They shared an office, you guys argue it through and if you haven't decided by noon tomorrow I'll make the decision. Which is clearly the worst decision of the three from their perspective. The so, so a forcing function, a forcing function. So that afternoon I go back over to visit their office. Hi guys, how are you? You know, and they're just kind of chatting around, did you come up with a new solution? They come up with a completely better solution that was far better than any of the, any of the previous ideas. So sometimes the, the cauldron of ideas work. I'll give you another example. We had a, we had an engineer who had invented a free wifi and they decided to, they had launched this thing in San Francisco and so we're doing a and a cash who has since left the company had just come from Deutsche Telecom and knew a lot about this. 
We knew nothing about free wifi telecoms or whatever. So he starts asking this guy very reasonable business questions, none of which he could answer. And the review is going south and it's getting worse and worse and worse. And at some point it was pretty clear that this was like torture and we had to stop. So I said, look, let's stop. And so at that point, you have a choice. You could say to the person, you know, you're an idiot for having brought such a terrible idea. You've clearly embarrassed yourself and the company and so forth. That would be the wrong thing at Google. The right thing to Google in a situation like that is to say, which is what I did, is I said, I think this is the most incredible idea I've ever heard. You need to come up with a better approach. The objective of free wifi right? 
Is incredibly strategic to the company. So all of a sudden you can see this guy, oh, and then he runs out the room, right? Six months later we reintroduced it and got huge benefit from it. So, so we ran with this product strategy thing and then we would do deals on Wednesdays. So we did, that was sort of the structure. Thursdays we had a no meeting day, which meant that we were always in meetings and it was organized so that the salespeople could travel Wednesday and Thursday and come back Friday and the cycle would begin again. So, 

Host: But in terms of, I mean Google had a bunch of different things where like sometimes like everyone, it was like a a day and everyone worked for Larry. Like it was like, we're gonna be completely flat. Like 

Eric Schmidt: I have to tell you about the Disor, the, the Disorg. Okay. So one day I, again, this is early in the first year, I'm a normal engineering manager and we have normal engineering plans and I think they're fine. And we have five engineering directors and we just, Wayne ing was the engineering vice president. And so Wayne came in and said, you gotta come talk to me. I said, what Larry Sge are on the rampage. I said over what? I said, well they, we had something called snippets and the engineers were supposed to write down what they did per week. So Larry has been reading the snippets and he's been correlating it with what the managers have been saying, not good. And Larry's a very precise and very analytical person. And so he says, look, we got a problem. I mean I can't deny it, Larry, what are you gonna do? 
I said, well, we're gonna get rid of all the managers. You can't do that Larry. So nevertheless, and that was of course gra greater challenge. So they took the five managers and made them individual contributors. All of them are still in the company. I might add 10 years later. And we had 120 people working for one engineering vice president directly. And we reasoned that this would guarantee he couldn't interfere with their work. 'cause so we ran that way for two years. His name was Bill Coran, he's now a very successful venture capitalist. And he jokes about what it was like, but you can in these situations do extraordinary things. 

Host: And so actually that's probably a good tee up too. So in this kind of blitzscaling circumstance, what's the role of the C E O? 

Eric Schmidt: Well, I can tell you my role was to manage the chaos. You have different kinds of CEOs and there's no single answer in any successful company. You've got to have somebody who can run very fast and has very, very good product sense and has the sort of intellectual, emotional leadership of the, the key stakeholders in that sense. It's like a faculty, you know, the key engineering talent, they sort of put up with the management. You know, they're, they know what they're doing. They're incredibly professional, they're very, very driven. They, they know what great products look. That's what success looks like. So my job was to sort of organize the, the world around them. So ultimately, if you ask Larry and Sergey, when they hired me, Larry said to me, well, we don't need you now, but we'll need you in the future. And I think that was roughly right, right? 
As a small company, they were doing fine. But in order to scale you needed somebody who understood replication and you could basically put the systems in place. So I set out to hire the non-essential executives, which is everyone else, right? You know, all the other functions that you need and deal with all the other kinds of things while they're in Serge. As founders, we're working on the technical things. There are other models where you have a very technical founder who won't give up control, who seeds partial business control to a business associate. I think Mark is a, is a good example of that. Yeah. Where Mark's not gonna give up control over Facebook. And by the way, Larry and Serge didn't either, right? It doesn't matter whether you're called CEO or not, but Mark allows the key stakeholders, in his case, the C F O and Cheryl to run large parts of the company. And of course they do a great job. Yeah, 

Host: Exactly. One of our thesis in Blitzscaling is that part of what you do is you make decisions about also what not to do in order to move fast. Yeah. Were there kind of key decisions about what not to do in order to be able to move fast at Google? 

Eric Schmidt: Surprisingly, no, because because the ambition was so broad, the only lever I had was to slow some things down and and emphasize other things. I don't agree that you should narrow your focus. What I believe is that you get the best outcome when you make the broadest appeal in terms of leadership and excitement and so forth. And we worked very hard to make that happen. But there were, there were other things, for example, we would refuse to do exclusive deals with people. But I would explain to people, well we don't really do exclusive deals, but we only have the capacity to work with one and it's going to be you. Right? So that there are other ways of achieving those kinds of things. So I'd be careful to, to conclude that you should do a small thing. All success starts from doing one thing really, really well. But you'll recruit better with a broader vision that's credible and that you can articulate. But go back to that selling the dream, right? What you do is selling a dream. If you can't sell the dream, then you're not gonna be successful. 

Host: What were the key things that kept Google innovating intelligently as it scaled, right? 20% time was one of the things that was publicized. 

Eric Schmidt: We talk a lot about that. 20% time was a rule, was vetted again, when I started there, there, there were two actually. Interesting. One was, don't be evil. And the second one was 20% time Don't be evil, I thought was a joke. 'cause I mean, nobody here is evil. Yes. I don't wanna be evil. You don't wanna be evil. And so I was sitting in the original conference room in the small building when we started and there's this conversation about ad targeting in a particular ad click. And one of the engineers, his name is Ron Pounds the table and said, that would be evil. And I'm like, oh, okay, what, what just happened? And the whole mood of the room changes and there's this huge debate over whether that's evil or not. And ultimately they didn't do the change. And so I, I thought, what's the analogy there? 
And it, the analogy was, it was, it's the Kanban system, right? In Japan, the notion that any employee can stop the line if they see a poor quality thing and it works 'cause of shared values, strong shared values, a strong buy into principles takes you far. And I think that helped us. And that I, I think it, it may or may not be true today that the company has that feeling, but there's certainly, its history is clearly that the second one was 20% time. And the idea was that you could, we could ask you as an employee to do everything you can in 80% of your time and the other 20% time you could do whatever you wanted. Don't be too worried here. These are engineers, they're not exactly gonna run off and do something wild. But, but if they're passionate about something, they could do a 20% project. 
That became, many of the features that we offer today began as 20% explorations. So part of the management job was to sort of listen for those 20% time things and then sort of aggregate them. And Marissa, again, I'm just mentioning people that you all would know now running a Yahoo of course. And a superb executive would watch for these things. So Marissa maintained a top 100 list, which had 300 things on it and she was constantly, constantly calling that list and trying to identify these little ideas and trying to get them to talk to each other. Yep. 
So well Marissa's a good example her, the a p M program, et cetera. How did you, how, how did you end up growing managers? Like how 

Eric Schmidt: I would argue immodestly that the program that's called the A P M program is the largest source of entrepreneurs in the Bay Area today. So Marissa had this idea, Marissa was an, I think an undergraduate here or a TA something Undergraduate. Undergraduate 

Host: INAL Systems. Oh 

Eric Schmidt: Yes. You know, incre, incredible talent. Very, very technical. And she became a product manager. And when I started there were, she was one of the three product manager. The company now has thousands. And she had the idea that we should grow these associate product managers as she called them. And the idea was that you would hire people who were right out of college with a technical degree comp, typically computer science, who did not themselves want to become programmers, they wanted to work with programmers. So she would identify them and they're all, again, very young right out of college. And then she would train them. And so they would, for example, go on these trips for weeks and you know, sleep four to a, to to a hotel room and you know, just like in college or graduate in high school. And it'd forged these incredibly tight bonds of people who were highly technical and who could specify products. 
And then she would run them through this sort of training program. And Sundar was an example of this slightly older version of the same thing. All of the executives running the key parts of Google came in through that program, it turns out. And the program, although she was too young to in to understand it, was originally invented by Microsoft. Microsoft had these people called technical leaders who were non programming liaisons, who then, and they were incredibly technical and they were the ones that did product specs. So I think, I think we give Microsoft the credit, and we give Marissa the idea for inventing the model at Google. And that model is scalable today. 

Host: And is that the kind of key way that you populated a bunch of the key strategic leaders? 

Eric Schmidt: Yes, we did One other thing that we, one day we, we'd hired a, a woman named Shona Brown who had been at McKinsey and she had been a partner, and I guess she'd gotten tired of being a partner and she wanted to work in a, in a proper company. So she came over and we made her chief operating PAH something or another and put her in charge of all the things that nobody knew what to do with. And so she comes in and says, I think we should have our own McKinsey operation. I said, no, no, we're not gonna pay McKinsey. She said, no, no, no, we're just gonna hire the people from McKinsey. And I said, what? And she goes, no, we're gonna hire the following. We're gonna get the people who would be associates that is non-tenured, non-partner people, and we're gonna have them come and do the McKinsey function. 
She didn't mean hiring from McKinsey, she mean replicating that function. And they'll be in this group for one to two years and then they'll go with the business that they studied and that'll be their career path. I said, I'll give that a try. So an example is that one of my students here at, at Stanford went into that program for a year and a half. Again, very, very good. Stanford, m b a analytical skills. And you know, it's a pilot and you know, just a great leader in all known ways. He runs half of YouTube today. Now, how did he get from 10 years ago that to running half of YouTube? He earned it, right? He went from project to project. Give you another example. Dennis Woodside, who's now the Chief Operating Officer of Dropbox, came in through a similar program. So he studied Salesforce effectiveness and we put him in charge of the emerging world. 
And he was doing so well. We eventually put him in charge of all of Europe and then eventually we put him in charge of all of Motorola. And then he went left to go become number two at Dropbox, which is a good move for him. So, so these people who have this sort of business analytical skills are incredibly useful. So whenever we've had problems involving business units and how do businesses interact, we take one of these people and inevitably they go with the problem and, and fix it. Yep. So, so, so again, think of that as an internal stable of talent in the same sense that the apm, another story about the APMs, Marissa worked for Jonathan, and Jonathan was very colorful and Jonathan said, we need a chain gang. I said, what is a chain gang? He said, A chain gang is a whole bunch of people who are waiting for work. 
And what we're gonna do is come up with projects which are good for the chain gang. So we wrote down a list of questions that we had about the business and our products and so forth that were sort of identifiable products and they had to be doable in a month. And all of a sudden we had answers to every question we had about competitors, positioning, evolution, costs, and so forth through the chain gang. And by the way, these are 23 year olds and it's part of their development learning. So you can use the talent and those models that I just described are very, very scalable. Yes, sir. 

Guest Question: What are the most counterintuitive signs of talent and potential at a very young age? 

Eric Schmidt: I would describe Gnome. No. So Nom went to Berkeley in the math department at 19, got bored. He applied to Google and didn't meet any of our criteria. So somebody knew him and said, you should talk to Berkeley. Wasn't the enough? Yeah, Berkeley was not good enough. Yes. And he applied to Google and he was rejected for obvious reasons. And so somebody knew him and said, you should talk to this guy. So he shows up and he's very unusual and he had figured out a way to do spelling correction. And I, and so somebody said, well, we should just hire him to do spelling corrections. Okay. Whatever, you know, in other words, it's kind of loose. So he invents the spelling corrector, which is the first time this had ever been done, which is a huge achievement. So everybody said, well, we should have hired him. 
And said, well, he didn't meet any of our criteria. So we have another rule, which is if the person is super smart, hire them anyway. Right? But they've gotta be able to do like invent a new spelling corrector. So, so armed with that information, six months later, I'm in the cafeteria and it's six o'clock at night on a Friday night, and I'm getting my dinner and Noam's next to me. And Nome says, I've gotta talk to you. I said, what? I said, I need 10,000 machines. Now, 10,000 machines at the time was a lot. It wouldn't be today. What? And again, I have a lot of credibility with Nome says, what are you gonna do? He says, I'm gonna solve general knowledge by the weekend. 
Okay. Okay. Okay, good. Okay. I said, okay. I put my tray down, I went over to the fellow in charge of machines and I said, get him as many machines as he does. So he turns on the software, right? We're chunking away and the algorithm stops. They can't figure it out. They don't need more than a couple thousand machines for the weekend. And I'm saved. And today, no is still trying to solve general ai, right? But if there's anybody I can think of in the world who's likely to do it, it's gonna be him. So what do you learn, right? Talk to the person and figure out what is it that they're going to do. And if, if they've got, if they've got a path, give them a shot. But they have to be able to answer it that way. So that's how, that's how you handle these sorts of strange cases. There are always odd cases. I can give you lots of examples of hiring. We try to hire people who can coexist with other human beings because we tend to work in teams. But there are cases where we've said, okay, keep them over there. You know, 

Host: Usually the measure on that is they have to be so valuable that you're willing to put all the infrastructure around. 

Eric Schmidt: And one of the things that Jonathan and I say in our book is that you should hire the divas right Now, by the way, if you read any management text, it says don't hire the divas. 'cause they're nothing but a pain in the ass, by the way they are. But the people who are the divas who believe right, are the ones that will drive the culture of excellence and they'll drive you to that excellence. Steve Jobs was a diva. I worked with Bill Joy, who was my colleague for many years. He's an example of a diva. And I mean this in the most flattering way. They expect a lot, they drive people hard, they're controversial, and they care passionately, right? If you find those people, you're probably gonna work for one. So be nice to them, right? Pay attention or, or be that passionate. 

Host: Back to innovation, how important is it to have separable groups to accomplish something big with an existing company? You know, the Android group, Google X, 

Eric Schmidt: This problem has never been solved, it's just a mess. So the correct answer is two people with a graduate student and a faculty member at Stanford, and they go off and change the world. Every project I've been associated in the 40 years I've been doing this has started with two people in roughly the equivalent of graduate student and roughly with an assistant professor who's working for tenure. So for example, windows, the platform, you know, was started by one person who I happen to know. Unix was two people. Java was one person. I go on and on and on. Gmail was one person with his colleague Paul, and that's Paul Boite. Now, today, how many people work on Gmail? Many, many, many, many hundreds. Android, a very small team. Linux done by Lin of, that's why it's called Linux. I, I, again, go on and on and on. 
So one day, I'll give you an example, one day I thought, I love this Google Docs product. And so I figured they've got a spreadsheet and a word processor and so forth, and I, I want to meet the team. And there was a conference room near me and I said, just bring them into the team. And they said, no, they won't fit. I said, how many people work on Google Docs? And they said, 150. I said, 150, what do they do? So we didn't get everybody in a larger room. And I went to, what do you do? Well, the answer is, the projects today require a lot more resources 'cause of internationalization, integration and so forth. So one of the, the, the, the point here I'm trying to make is actually slightly different. One of the complaints I have is that the teams that are doing the work that of products you see are far larger than they should be. And that's a failure of architecture, right? In other words, when you have that many programmers programming, that means they don't have the right libraries to depend on. They, you've not generalized the the phenomena. It is my hope that the machine learning revolution will fix that problem. 

Host: Interesting. And is there anything that you think is important about the separability? So you don't have to interface with the cross coordination with all the rest of the company. 

Eric Schmidt: Computer scientists understand the concept of interface and a p i and well done platform. APIs are the key to everything. One of the problems we have internally is that our system is incredibly powerful, but now, so co-mingled with itself, right? 'cause of its codependence, it's very difficult to partition. And I think that that's a fairly normal end state for these large software projects. And so again, within the company, there's a major initiative to put services into Google Compute, which is the externalization of this, which requires APIs. So what I, sorry for the technical jargon, but I'll tell you what I tell people. I never want to do a platform product without an appropriate end user app that goes with it. And I wanna look at the interface and I wanna, well design interface between the two. If you can maintain that discipline, you can build great things. 
So an example would be, today, the vast majority, if you guys go to any startup here in the valley and most around the world, you're likely to use Amazon Web Services a w s and it's associated interfaces. What's unique about those web services interfaces is that they're programmable by mere mortals, right? They're relatively straightforward, they're relatively intuitive, they did a pretty good job, right of it. There are limitations to what it can do, but it represents good design. The original Mac toolkit is another example of something where you can get a lot work done. It's in a single book. I worked on something called the Alto, which dates me done before you guys were born. The Alto had a single book which showed all the APIs, right? Right. So that's, you know, when you have that kind of proper interface, that's where you are. 

Guest Question: Can you ask about Alphabet? So scale this all the way up and you talk about organizational interfaces, about how that's, 

Eric Schmidt: Well, alphabet. So the question was about Alphabet. So, so I was giving a technical answer to interfaces. There is a size at which companies begin to be to fall in on themselves. I think Google has done particularly well because the two founders are so strong-minded and so technical and obviously so brilliant. And, and I would argue that Apple had done the same thing. I, if you look at the industry today, it's Apple, Amazon, Facebook and Google driving, sort of the first four. And then there's plenty of others right behind. And, but each of those companies has either a strong founder or a strong culture, very strong product focus and so forth. Steve told us, of course I was on the board of Apple for for many years. Steve told us that the problem with Google was that we had too many things going on. That his vision, which of course I think has been realized by the success of the company, is a very small number of incredibly well done products, right? 
And we can debate that, but the fact of the matter is the success speaks for itself. So in our case, I think we've hit some kind of a mission scale problem. We spent two years arguing about this and the argument was, should we change the logo? Which I don't really care, but everyone else cared. And they said, well, the mission was all the world's, all the world's information that we could index and use. And obviously how do you match that with cars and biology and so forth. So Larry reviewed this at some length. We had visited with Warren Buffet on the 14th floor of a building in Omaha. It was the three of us. And Warren Buffet, if you can imagine that. And, and he held forth. He was a fascinating and impressive man in every regard. And it had a big impression, I think. 
So you can understand Alphabet as, as an attempt to build a holding company that looks like Berkshire Hathaway out of an existing large company. This has never happened in the history of American business. It's a big bet, not a little one. And it's typical of Google. More important to know that we announced this without actually even knowing what the companies were. So one of the fun things I do with employees is I'll say, let's do a, a show of hands. How many alphabet companies do we have? And what are they? Right? And of course there isn't a good answer 'cause we haven't announced it. No rational company would ever do that. They would have have had months spending their time figuring out this market and so forth. And our attitude was just get started, right? And work it out. So today there is one, which is the Google life sciences stuff, which looks like it's gonna be hugely successful. 
We've also said publicly that Calico, which is an aging company, we've also said publicly that access, which is about Google fiber and a few others are coming characteristically. We're not doing this halfway. So having spent all week on this, I can tell you the instantaneous situation is that we're trying to push the alphabet companies not to be divisions, but really separate companies. And that means severing the ties and really operating autonomously. And that's inspired by Warren Buffet's rule that he loves to hire people who would do it, whether he hired them or not. He never has to worry about them. He knows that they're gonna wake up in the morning and show up at work and work very hard. That's just the nature of the people that they are. And those are the, so ultimately the recognition at our scale was we needed to have an organizational structure that would attract those leaders. 
We just hired this guy John, who's gonna run the car stuff. And I talked to him yesterday and he's fantastic. He came here to do this, this is what he wants to do. He's gonna work 24 hours a day. He loves he from the car industry, he wants some excited driving house. There's all sorts of issues and all sorts of partnerships. You know, I can't think of a better leader to take it forward. Normally companies would've given him a little bit of leeway. He is going to be the c e O, he's gonna have his own operating and he's gonna bear the risk and the downside as well as the upside. And that's very attractive to him. 

Host: What do you, if you're looking, if you're giving advice to entrepreneurs who are thinking about building game changing companies, what do you think the key things were that made Google, you know, win? 

Eric Schmidt: We, well, first you have to have the right founders. Yep. And you understand this. You are a founder and obviously the right founder in that context. You have to have the right founders for the problem. And the founders have to be good. And by good, I mean they have to be impressive. They have to be smart, they have to be passionate, they have to be committed. You know, this has to be their life's work, which again, was true of you. And it's true of true of ours. That's 0.1. Point two is you need to have some luck. And in our case, a search and the ads that we develop turn out to be a gold mine of revenue. And so once I figured out that it wasn't a sham, and once I figured out people really were clicking on these ads, we set out to maximize the amount of revenue that we could get from that business. 
And if you look, it just went like this, right? And you maximize that by making the ads more relevant, making them more useful, all the things that you've heard. So the fact that we ended up in a very high gross margin business very early, gave us the ability to take these risks. So when I talk to people, I always say, well how much gross margin do you, how much flexibility do you have? And I've been so lucky and I, I give this credit to luck first that it, I forget that there are other businesses that are relatively low margin businesses like almost every other business by comparison. And so you wanna be careful to understand how much flexibility you really have. The ideal business is the Microsoft business, a monopoly software business with hardware competitors who are competing for good treatment by you in a growing and global industry. 
Right? Again, let's use Uber as an example. Uber is notice that Uber spends an awful lot of time talking about how the drivers don't work for them and that they don't own the cars. There's a reason, right? It's not the legal and the liability reasons. It's because if you think of them as a software infrastructure company, in other words they help and assemble this thing, then they have very different economics then if you think of them as needing to open or open and own all those things. In that sense, it's a modern version of the franchisee. Why do people own McDonald's franchises rather than McDonald's? Well, because McDonald's couldn't get the capital to own 'em all themselves, right? So franchise have to have to risk their business under a franchise model. Why do hotels like Four Seasons doesn't actually own the buildings? Like how could the Four Seasons Hotel not own its own building? It's actually better to be the operator with a fixed revenue share in all the ways that you know, and let somebody else ride the real estate up and down, which is vicious, right? If you haven't spent some time in it. 

Host: So I have a bunch of questions I'm gonna ask one more and then we're gonna open up and if you guys don't have questions, I do have a stack more. I'm more way too many for the amount of time. 

Eric Schmidt: Well, you and I are together tomorrow afternoon too. We're doing something together in San Francisco. 

Host: Exactly. And it will actually be on radio at one point. 

Eric Schmidt: Oh really? Yes. 

Host: So it's, you know, how do, what do we do about the middle class? It's an important problem. 

Eric Schmidt: Okay. I'm in favor of them. They click on ads a lot. Yes, 

Host: Exactly. It's clearly, so, so 

Eric Schmidt: It's clear. So it's clear what my position is, is I'm in favor of more human beings. Yes. 'cause more human beings means more customers and more customers means more growth and revenue for the corporation that I represent. If you are confused on that, do the math around employment and people. We want more people, we want more immigration, we want more customers, we want more internet, we want more revenue. That's called capitalism. 

Host: Exactly. We want more empowered people too. So, you know, Google obviously making massive amounts of progress in a lot of different areas. Everything from self-driving cars, you know, genetics, you know, global connectivity of internet search, mobile phone systems. I mean, the list just goes on. Were there any kind of particular value of the shadow moments where you were like, oh gosh, is this gonna work? 

Eric Schmidt: Well, a lot. I think the, the, the one that I, that drove me crazy was the conversion in the auction. Six months later we had a, a dis we we, for various reasons, we had to merge our databases together. And I thought, well, this is a pretty big deal. So I talked to the engineers and we had three different databases to a single ad system. And I said, okay, well maybe I should spend the weekend in the data center watching him. Engineers said like, what planet are you from? We never visited the data centers. I said, okay. So I figured I'd take the weekend off, they would do the merger, and I would go into work on Monday morning. And for various reasons I had to be in New York that day. So I flew, I flew to New York on Sunday and then Monday and I wait and I see what happened after the database merger. 
So we're now merging to a single auction-based system, which based on the data would produce a lot of revenue. So at five o'clock, I'm sitting next to a young woman, I have my little cube right next to me, this and the phone rings and this, you can hear on the voice, it's a man. And she, he is screaming at this woman, how could you do this to me? This is a disaster. You know, so forth. And this goes on for 25 minutes and I'm listening and writing down to figure this is, you know, real feedback. They, they say in the book, you're supposed to actually listen to the customers. I was happy to have her listen. And I wrote down what she, this poor woman had to put up with. So she hangs up eventually, she's as polite as she could be. And I said, well, what happened? 
And she said, well, first place he calls me every day. I said, he treats you that way. Yep, absolutely. Every day at five. And he said, well, why doesn't he drop you? I said, because everything in his business is dependent on us. I said, well what was that all about? He said he couldn't get his report to show his boss that day of how much product they had sold. So sometimes you get the wrong impression if you build something that's that crucial. Right. So what happened was, I thought, oh my God. So I go to the airport, I fly back and I say, we've got a disaster and we're gonna have meetings every day until we resolve this. So by Thursday it still wasn't resolved. So I said, okay, we're gonna have meetings twice a day at 10 in the morning, at four in the afternoon. That started Friday. And I said, by the way, if next week this isn't resolved, we're gonna meet every hour for seven days a week. And we fixed it. And that database is the benefit. So, so I think sometimes knowing, knowing where the problem is and, and this poor woman, right, and the abuse she had suffered at the hands of this unknown customer drove that. And I thought, well, okay, that's a, that's both a, a lesson but also a crisis. Yep. 

Guest Question: So at our company, you use a model of Google product. Okay, you use Google AdWords analytics, email, Google Docs, Android phones, and the list goes on. And one of the things we noticed was that our experience with Google as a company and the products was different in each product. So support was different. Yeah. Quality was different. So firstly, is it intentional or is it a result of those group things that we were talking about? And secondly, how is that gonna change with Alphabet? Is it gonna be more extreme? 

Eric Schmidt: The products you're describing are all in the Google part, in the G of Alphabet. So there's no change from an alphabet perspective. We've had various of these kinds of problems. And I think a lot of these have to do with scale. There's just a level of of how well you can integrate all your support. The products are at different levels of maturity, there are interconnection issues and so forth. Without knowing the specifics, I can't give you a better answer. Initially we didn't have any support at all. And that was, that was sort of a non-starter. But we've tried, one of the things that valley companies do is they try to minimize the human support that they provide because the model requires them not to have too many, you know, the old telecom support model if you will. 

Host: I would say a woman there. 

Guest Question: Could you walk me through your day yesterday? 

Eric Schmidt: Well, let's see, in the morning I went to the doctor for my routine test, which was fine. I then drove to the office and we moved to Serge, decided that they were bored with the building that we've been in. So we have moved ourselves to what we call the Rails building. And this building is the old Mayfield Mall, which was owned by HP and Sergey one day decided that he didn't like all the money we were spending on interiors. So this building is nothing but a concrete shell. It's incredibly cold with really uncomfortable chairs. And he views this as correct and the, the, there are no walls and the desks and they have a, a single wire that comes down that's got power that you plug your computer into. The building is full of drones, self-driving cars, kites and everything that is sort of, I, I excuse the stereotype, but a teenage boys, you know, lab paradise, like popular science when I was a boy. 
So it's sort of dangerous. You have to duck occasionally. So we decided to have, so we had a meeting with the chairman of Wipro who is a incredibly important person in India. He's spending a couple billion dollars on education in India and we're trying to do a partnership with his company to do deployment of Google Services to address some of the issues you're describing. What's interesting in that meeting was they were talking about their biggest problem is they out, they do business process outsourcing and B P O, they do it for travel and they want to automate a lot of those sort of issues. 'cause that gives them, you know, a leg up in their competition. So that's an example of something that we could do together that we had our board meeting and our board meeting. Our rule about our board meeting is you dress down for the board meeting so everyone shows up in jeans. 
This is always a shock. And their in sege typically arrive on roller blades or bicycles with bicycle helmets I might add. You sort of have to get used to it. So we, the board meeting consists of reports from the subcommittees, which is all fine. And then we've added, since we've added a company, we've had a report from Sunder who's the C e O of Google. And then at the end and they have demos and stuff and then they have executive session and then and so forth. And that was, and then we had a meeting, one of the things we're arguing about in the alphabet structure is how to allocate all of the software to the different teams. And there, there are, there is a series of people who believe that the software should be partitioned among the, the companies. And my argument is the software should be a free good across all the companies. And I won that argument. But in order to do that, I had to get all the people in one room and get everyone to agree and send a congratulate Terry message of how brilliant they were. And then I went to dinner. How's that Chris, you had a question? Yeah, 

Guest Question: So for Alphabet, you studied Berkshire Hathaway. What were the other organizations or things in the past that were most useful to study? In terms setting up? 

Eric Schmidt: I don't think that we studied very much except for Berkshire Hathaway because all of the other solutions wouldn't get us to the kind of autonomy that we want. Now there are many, many technical issues of taking an existing company and, and splitting it in pieces. Technically Google sort of did what is called a reverse swap. And so the parent got the stock and then the contracts stay with the G. And there were many legal reasons for that. But one of the things you learned as a C E O is that in a well run company, you can hire a very large number of very smart lawyers who can figure all these things out. So what you try to do is you try to say what is the goal? And then say please solve for this same thing with accounting and so forth. 

Guest Question: How do you think about capital management now that you have alphabet 

Eric Schmidt: That was discussed yesterday at some length at the moment? Well, so we had a joke. The previous CFO had an orange backpack and our joke was all the cash was kept in the backpack and it's on the order of 70 billion. So it's a like a lot. So, and that, that's a joke by the way. So we're clear. It's not actually in the backpack, it's just an internal joke. So the cash sits at the moment, at the, I believe it sits in Google, but it is controlled by the parent and at some point they'll move it around and there are legal reasons for that. But again, this is the kind of stuff the shareholders own, the cash and the shareholders in are in the board. So the board effectively controls it. But 

Guest Question: More like how do you pick which ideas to fund, which companies to, to put more capital, 

Eric Schmidt: It's the same process as always. You know, there's a competition for best ideas. Here's an, a typical example would be Google Fiber. Google Fiber is an incredibly good business. Once it's established. I argue that we should maximize the rollout of Google fiber. We've announced, I think 20 cities. I don't know the exact number and it's working very, very well. So now the question is from a shareholder perspective, how much cash do you invest in any particular year? Well, my attitude is as much as you can, but there's sort of a rate at which you can deploy that cash without wasting it. So it turns out that the deployment is a function of the rate at which you can get the permissions, hire the electricians and so forth. It's not a cash problem. So in the Valley companies that we're talking about, Microsoft, Cisco, Facebook and so forth, they have so much cash that the kind of normal cash arguments, cash debt don't really apply. It's really much more can we use it effectively. Another, another example of a rule I should say is that every May we think our business is slowing down. 'cause that's the seasonal low. The strongest is in this period before Christmas. And every May I think, oh my God, we should stop hiring engineers. Never stop hiring engineers because engineers again properly deployed, can always generate enormous amounts of economics over their salary. You're gonna need them in the very back. Yep. 

Guest Question: Could You talk about some of the personal tolls that this has taken on you? Like with scaling some of the emotional tolls that you it, 

Eric Schmidt: It hasn't been that hard. I mean, look, I went to Novell, I did a turnaround. These high growth companies are, they're a blast. I mean, I would strongly encourage you to join a high growth company early and stay in it. I used to tell people, this is a rocket ship, this is success. Stop complaining, right? I mean, I've seen the other side, you know, this is good. So, you know, the personal tolls have to do with time with your family. Exhaustion. Burnout. We actually got so concerned last year that employees were bringing out that we actually gave a series of speeches where we said, people, you have to take vacation, right? You know, we, we put in place one of these vacation policies where you could take whatever you wanted and, and people started taking less. So that's what we worry about. Last, very last question right here. I thought you had a question now. Yeah. 

Guest Question: Speaking Of ship, it's one of the prime examples of the company that probably has to worry about scaling too large because antitrust, and I'm just curious how you think about the limits of scaling and how that affects your, 

Eric Schmidt: What I've always told our product teams is I'll do the lowering, you do the producting, so just build me incredible products. Don't be a lawyer, you're probably not very good. Now I'm not a good one either, but I'm in charge, right? So that, that kind of works. So what I always tell people is just build me incredible products. Now obviously there is a real issue because of the role and scale. It was much lonelier at Google, but now that the Europeans are very concerned about all of the American companies, it's much better, right? So in the US I I think it's pretty clear that we're not in antitrust trouble. In other words, scale in and of itself in America is fine. The European law and the European biases tend to bias against large companies. And the tech, the tech companies are building large market share platforms very, very quickly. And there's a commissioner in Europe who just announced a proposal to study platform platform economics from the standpoint of antitrust and regulation issues. He identified 32 co companies, of which 31 were American. So that gives you a sense of what's going on. With that, let's thank Eric for joining us. Thank you.
