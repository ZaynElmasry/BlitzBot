This is a transcript of a lecture by David Rusenko on How to Find Product Market Fit
It starts with a lecture followed by a question and answer section


Jeff: So our next speaker and I have something in common. We both started businesses to allow people to create websites, the differences that David's business was massively successful. David Senco is the founder of Weebly, which early this year sold to Square, and he's going to give us a talk about how Weebly found product market fit. Thanks. 

David Rusenko: Thanks, Jeff. I'm, I'm really happy to be here. I'm actually very impressed with how full the room is given it's right after Burning Man. Did, did anyone go this year? Oh, not too many attendees. All right, we got one over there. Okay. So, so just by quick way introduction a little bit by myself, if you haven't heard of Weebly, Weebly is an easy way for entrepreneurs to build a website or an online store. Before Weebly got started, the only way to do that was to learn to code yourself. And now there are plenty of tools and services to allow you to drag and drop and build a site. I wrote the first line of code in February, 2016. So a little over 12 years ago now. Grew the company to 50 million users and around 350 employees sold to Square in May of this year for 365 million. And probably one of my favorite stats is that half of the US population visits a Weebly site every single month. The reason it's my favorite is it's because it's reflective of the success of the entrepreneurs, people building the websites themselves and actually having success and seeing those results. So I'm here to talk to you today about how to find product market fit. It's a, you know, the top problem that anyone deals with. I'm gonna try to keep it fairly practical, not theoretical, because I think finding product market fit is really about the, the practical, nitty gritty, the hustle. So, I, I, I wanna just preview real quick talk to you a little bit about our journey. Like I said, I wrote the first line of code a little over 12 years ago, which, which sounds really weird. That has been that long. This is what it looked like. This is a photo I took from February, 2006, is where I was at, be Beaver Stadium at Penn State. When I wrote the first line of code, just kind of gives you the setting, but, but in college in August of 2006, so this has been six months, we, oh, I should introduce this graph. So this is a graph of the new users per day signing up for Weebly. So non cumulative, just whenever someone signs up, you know, you get a one. And this is six months in. So we still hadn't launched Six months in, we're Dan, Chris and I were all doing internships that summer. You can see here our, our massive record signup day was 12 users. I think we just created accounts for friends and family. So six months in, we still hadn't launched, right? Just to give you an idea of how long it takes, we worked for six months and hadn't launched in October of 2006. This is eight months later, still hadn't launched. We were hustling for buzz on forums. We had created a signup link, you can see here now, we had 30 some users that signed up on our record day, but eight months in and still hadn't launched in October of 2006. I read about why Combinator on slash dot. The deadline was about three hours to go. So I think it was about 1:00 AM Eastern when I read it. The deadline for application was midnight Pacific. So I had about two hours to go to create a, to create a YC application. I didn't have time to call up Dan and Chris, my co-founders, and ask them if they wanted to drop outta school with me and moved to San Francisco. So I took a guess. My guess was that Chris was gonna drop outta school and Dan wasn't going to. I called Chris up first the next morning and said, Hey Chris, you wanna drop outta school with me and move to San Francisco? And just on the spot, he's like, hell yeah, let's do it. I called up Dan, I said, Dan, you wanna drop outta school with me and move to San Francisco? And he said, you know what? This sounds like a really promising idea. Let me call my parents. I'll call you back in two hours. It was a much more responsible approach. But, but, but I applied with less than an hour ago. We drove up, interviewed and got accepted. Actually, funny story, we got finally were able to get on TechCrunch the day of our YC interview. So I'm sure that that didn't hurt at all. This is what that looked like. This doesn't, isn't actually what a normal press spike looks like. You'll see a normal press spike later. But in this particular case, we only had two servers and we were really worried about our servers burning down and a W Ss didn't exist back then. So we, we basically decided to allow you to sign up and then say, Hey, you're on the wait list. We'll contact you once you're able to access your account, which is why it's spread over a few days. But the first tech crunching, now this is much more normal of what it looks like after a press spike. You see it kind of goes down pretty low. It's kind of hovering around the same level. If you're observant, you'll notice here one day we had zero users. That presumably means that we were, the whole site was down, which is great. But, but in January, 2007, 11 months in, we dropped outta school, packed up all of our services in my car. I drove cross country to San Francisco. Would not recommend driving 80 in January. Got stuck in Wyoming for three days, but finally made it out here. And this is 11 months in. So 11 months after writing the first line of code, we're working on it full-time in San Francisco as part of the YC program. Here's what that looked like. It's still shocking to me that at one point this TV was current technology 'cause it just looks so old now. But, but here we are. We, we went, rented a one bedroom apartment, sorry, two bedroom apartment in the Ys scraper. We pushed three desks together and we pretty much just worked all the time. We worked 24 7, our only rules, we'd take Saturdays off, but other than that, we'd work until we tired, we'd sleep until we weren't, we'd work until we tired, we'd sleep until we weren't. 
And just kind of repeated that process. Here is a second TechCrunch press spike that we got in January. This one's much more normal. This is exactly what you should expect if you get on TechCrunch or any press. It goes straight up and it's really exciting that day. And then it goes straight back down the next day and, but at least settles a little bit higher in April of 2007. This was 14 months in. Now you notice we had a couple other press mentions. What you'll notice here, these are going in the wrong direction. You know, the number of new users per day is actually declining, declining, declining. Both of these are heading in the wrong direction. It means we didn't have product market fit yet. We're 14 months in, it's over a year, and we still don't have product market fit. This was kind of an interesting moment in our history because we found ourselves with less than a hundred dollars in our bank account. 
And YC demo day was coming up soon and we were, you know, kind of had some excitement and thought, you know, talking to investors, maybe we'll be able to raise money. But we certainly weren't sure of that. We had just gone to Costco, so we had lots of food for, for, for a couple weeks, but rent was coming up and as everyone knows, rent in San Francisco isn't cheap. So about a week after this, I came to this very room, pitched a whole bunch of investors at demo day, and we were successful in raising a 650 k at the time. That was called a series A today. It would probably be called a pre-seed, a round of funding, 14 months in. This is what a price round series a paperwork looks like. Just to give you a perspective too, on, on a little bit how crazy things have gotten out here. 
We raised 650 K on a $2 million pre-money valuation. So 2.65 post that was considered above average, slightly above average. We were all very jealous of Dropbox. We had raised at a $5 million post-money or valuation. And, and, and today I think that number would probably be 15, maybe 20. So it just gives you a little bit of perspective on how you can still be very successful, even if those valuation numbers today might seem low or you might be angling for a higher one, but, but really puts it all in perspective. This is May of 2007. So we got feature Newsweek magazine, which I don't even think is in print anymore, but you could see here the spike goes up, it comes back down, it settles at a higher level, which is great, but look, it's going in the wrong direction again, right? So this is now 15 months in still no product market fit. 
In August of 2007, here's 18 months in. We got featured in Time Magazine this time and again, it goes up, but now it's coming back down. Now it's settling at a higher level, which is good. But again, this is 18 months in, we're 18 months into the journey and we still have no product market fit. So just to give you an idea of how long it can take before having something even as basic as just having users that enjoy using your product and are coming back 18 months later, we still didn't have it now. Now to skip through a little bit of, of, of the rest of the story here here is October, 2007. So now 20 months in, you kind of see we had this moment and then boom, it turns around, it turns around and it starts picking up. And now all of a sudden you can see every single day we're getting almost a thousand people coming to our front door, which is more than we were getting featured in Newsweek magazine or, or on TechCrunch. 
First real traction that we got. Fast forward again, February, 2010, four years in, and now you can see we're off to the races. So I wanted to give you a little bit of snapshot of what it looked like for us to get product market fit in the early days before diving into some of the basics. So, so let's start with a definition on what is product market fit. So you probably all heard Y Combinator's mantra, which is, there we go, make something people want. I actually, if I was to modify this, I would say make something a lot of people want because that incorporates a little bit about the market, but we'll talk about that. So first we'll go over the stages of a company. So obviously you start off with, I have an idea and everything is really exciting and you're telling all your friends about the idea.
This is the very birth of a company. Let's go through some of the pH phases. So this is roughly all of the phases of a company. It starts with idea, you get the prototype phase, you then get to launch traction, monetization and growth. I put monetization after traction because oftentimes that's the way it goes. And actually getting going from launch and getting to traction is product market fit. Monetization is actually a much easier problem than product market fit. This, these are the, this is sort of the initial product market fit search, initial product market fit search is between idea and traction. So getting from idea attraction is probably the hardest thing and the thing that kills the most companies. All right, here we go. One thing not to forget is that when you're in this phase two, you're still refining product market fit. A lot of companies forget that they, they get so focused on scaling and so focused on, you know, continuing to grow the business and they completely forget that you're still refining and still building product market fit at this stage. 
So really important not to forget this, all right, so what are the hardest things at a startup? And I'm convinced that there's basically only two hard things. Number one is finding product market fit. It's really, really, really hard. Most companies will not be able to find product market fit. It's incredibly challenging. Number two is hiring and building a world class team that is also incredibly challenging. It's very unintuitive and it's very, very difficult to sort of grow through that rapid growth phase. And to, and to emerge on the other side with sort of an enduring long-lasting company and culture making money, I put as a very distant third, it is usually it lot harder to build a product that a lot of people really, really want than it is to figure out how to make money from that product. So I would say that's usually a distant third. You could have lots of ideas of how to make money. I would say definitely try to make money, experiment, learn, but it's a lot easier to figure out how to make money if you've already got people hooked. And then the fourth one, and we won't cover this too much, but, but to scale to a, to a really big long enduring company, you need to build an organization that scalably and repeatedly launches great products. And that's really, really hard because it's not just gonna be about the founders anymore, it's about the organization doing so scalably and repeatedly. 
One, one other sidebar is that the best companies will create a market. So if you look at sort of what we believe's done, if you look at what Airbnb's done, if you look at what Dropbox has done, all, all companies have created their own market. I say this because by definition here, market research is not gonna help. Market research is research on existing markets, right? And you're gonna create a new market. So how do you do that? What does that look like? So first of all, you need to find a hidden need. So there is a need out in the market that a lot of companies or a lot of people don't realize exists. And if people realize they existed, if it was obvious, then everyone would be doing it. And so, so, so the hardest part is finding this hidden need. And everyone is gonna tell you that the idea is dumb.  Everyone's gonna tell you it's stupid. I remember in, in the summer of 2006, after writing that first line of code, I went and pitched Weebly at the New York Tech meetup and it was a thousand people. It was, we were kind of alpha stage at that point and it was in front of a thousand people. And I gave a demo five minute demo, and then Scott, the founder of meetup.com, came on stage and just said he thought it was the stupidest idea that he'd ever heard and that no one needed to make websites and that people who needed to make websites already could, or peoples had to learn to code. And in front of a thousand people told us that it was, we had the stupidest fucking idea he'd ever heard. So the the point I'm making is if it's obvious then everyone will be doing it. 
So you're kind of finding a new reason. Now the hidden need in, in this particular case was that there was a lot of people who need to make a website themselves. And that was really hard because a lot of the tools at the time were geared towards people who were, who were hand coding the websites, basically like front page and Dreamweaver. We were able to realize that people wanted to do that and build a service that enabled people to do that. But figure out what are you a substitute for? What need are you serving better? What job are people hiring you to do? If if, if you know the jobs to be done? Book and framework, that's really helpful to think about what are people trying to do? People aren't trying to make a website, people are trying to launch and grow their business, right? 
So understanding what's the job people are trying to do and then what substitutes are there for that job. And so when you think from that mindset, you might think, well there's a website. You could also create a Facebook page. You could also, so there's lots of different substitutes for that job. I think a really important one is understanding where are you getting pulled? Where are your customers pulling you at? You shouldn't be pushing your customers towards a solution when you, when when, when things are working, your customers are beating a path to your front door and they're pulling you and saying No, can you need to do this? And you're saying, yeah, but that's not what our product does. They say, well I'm gonna kind of hack it to do that anyway, when you find people hacking your product to do something it wasn't intended to do, pay attention to that and double down on that. 
And then often what you initially create will seem to fit into an existing market but with less functionality, right? So it's the same thing with the iPhone. It was the same thing with Weebly. Often times it doesn't have three G, it doesn't have apps, it doesn't have any of these things initially. But what it does do is it enables a whole new market, a whole set of new entrants to come and use your product. And so the success of the iPhone wasn't that it successfully competing against smartphones. It sure looked like a smartphone, but it wasn't competing against any smartphones that were out there. Because what happened is there was maybe at that point in time I was a heavy palm trio user. There was maybe a couple million smartphone users in the United States. What the iPhone did is it made everyone a smartphone user. 
And so there was all of a sudden a whole bunch of new entrants. And then over time it also cannibalized the existing smartphone market. So a lot of times people may sort of mistake you for incumbents when you're creating an entirely new market. So the next is on building a remarkable product. So what does this process look like? And I'll try to break it down into very literal steps about exactly what you should be doing. So everyone knows this, right? Step one, have a great idea. Step two talks, customers, step three, something happens there. And step four, profit, right? Everyone knows this, but what is step three, right? Because that's where everyone's plotting around in the desert, like trying to figure out what the hell to do and nothing's working. So let's talk about step three. So step three is literally this list of things. 
So you talk to customers and develop a market thesis, try to understand exactly what their pain point is, what's that job they're trying to get done and how can you help them get it done faster or better? This is really important. Listen to their problems, not their solutions. So customers will tell you the pain that they're facing, listen to that When they talk about the solutions, they're proposed solutions, you could just completely ignore that 'cause they generally aren't that great. Number three, go through a rapid prototyping and user testing phase. Number four, you build a solution to their problems. Number five, test the solution with them. Number six, did it work? Go to one repeat. And then number seven, by the time you've, you sort of looped on points one to six, you probably looped about 27 times and that has some interesting implications, but no one ever gets it right on the first shot. 
No one gets it right on the first shot. So there's some implications there. So, so let's dig in on on a few of 'em. Listen to their problems, not their solutions. I like what that, Michael touched on this earlier too about the real seep jobs and fake seep jobs. There's this meme out there that Steve Jobs just didn't talk to customers and would just like produce the magical product that the world needed like in one shot just straight from his imagination. That's not how it worked. Here here's a quote. Some people say give customers what they want. That's not my approach. I think Henry Ford once said, if I'd asked customers they wanted, they would've told me a faster horse. People don't know what they want until you show it to them. That's why I never rely on market research. That is all a hundred percent true. 
Don't listen to people's proposed solutions. Market research is probably not gonna show you the way, right? But what he didn't say is that he never talks to customers. He didn't say that he never listens to their problems. He didn't say that he never iterates. 'cause those are all things that Apple does a whole lot. So it's absolutely critical. Talk to customers, understand their pain. No solution was ever delivered perfectly in a vacuum. Number three, rapid prototyping, user testing. So I think this is a really important point, building a fully, we, we made this mistake a whole lot early on. Building a fully functional product just to figure out if it's gonna work or not is a really, really expensive way to test the hypothesis. So you could get caught up in this loop of like build the product launch, it doesn't work. Scrap, repeat, build the product launch doesn't work. 
And especially like Michael was saying, if you're always searching for that home run and it takes you three months to build that product, that is a really long time to keep iterating. The best thing you can do however you end up doing it is focus on getting to a functional prototype as quickly as possible. So that might be, there's a whole bunch of tools now that allow you to take mock-ups and make them clickable and make them feel a lot like an app. You can do it by just writing throwaway code and just getting something really, really quickly out there. There's a whole lot of ways to write to write functional prototypes, but, but get in front of users. Don't worry yet about scaling. I know we were really obsessed about writing code that was gonna scale because the underlying assumption there is that as soon as we launch it, millions of people are gonna beat a pat to our front door. 
Doesn't happen, not gonna happen. So don't worry about scaling until you need to. I would say initially don't worry about monetization either. You wanna focus on making sure that the product experience is right. Don't shy away from monetizing your products, don't shy away from charging for them. But initially you need to make sure that your product is working for people and then expect that however many iterations you think it will take, expect it'll take about 10 times that many iterations. So what are the implications of that? And these are really important. Number one, keep your burn low. Because if you only have enough cash in the bank for two to three iterations and it's gonna take you 20 to 30, then that's not gonna work. And number two, build a team that can do this really quickly. So this is I think one of the primary reasons why outsourcing the coding in the early days generally doesn't work. It's because when you outsource a project that's one shot. Well if it's gonna take you 20 to 30 shots, not gonna work. You, you, you need to build a team that can very, very quickly iterate, rinse and repeat. 
Okay, this is another important point. Test a solution with customers. So here are your, here are your there, there's some helpful tools here. But the most important rules are number one, make sure you're talking to a target customer. So it's not helpful to just talk to anyone, make sure it's the one you're targeting, but make sure that you are super flexible on changing your view on who those target customers are. So when you talk to someone and it seems like, hey, this isn't my target customer, but then all of a sudden there's a whole bunch of 'em showing up and they're hacking and doing really interesting things with your product, you should pay attention to that and potentially change who your target customer is. Number two, don't overthink it. I think this is a problem a lot of smart people can have. You obviously you wanna rely on data, you wanna rely on market research, you get really, really into the weeds and the strategy and you super overthink everything. 
Don't overthink it. Anecdotal is okay, just getting in there and building and launching something and trying it out and iterating is the most important thing you can do. Doing all of your homework, all of your research, you know, looking at the market, looking at the strategy, it's gonna be the perfect strategy, it's gonna be the perfect strategy, but no one's gonna use your product. So don't, don't overthink it. Here are basically three tools. I think these are probably the only three that you need. Number one, customer interviews, you probably need about five to 10 of these. So basically what this is is it's talking to a customer probably for about an hour, maybe a little bit longer, whether it's on the phone or going into their place of business or or going to where they are and just understanding everything about what motivates them, what their problems are, what their pain is, and just getting that qualitative view of like what they're experiencing. 
Number two, UX testing sessions. You only need about three to five of these and, and we'll go over how to run a good US testing session. I think on the next slide. Number three metrics. So metrics are obviously really important. Tracking the right metrics is really important. The one thing I'll say is you'll never have as large of a sample size as you want. Even at Weebly scale today, we still sometimes have difficulty with getting significance for some of our tests. Be very careful about telling too many stories with your metrics that maybe aren't supported by the Cisco significance. So you'll oftentimes find this, they'll, there'll be blogs writing about an AB test and how you change the color from red to blue and it increased conversions by 27%. And it's like, oh yeah, how many people ran? Oh yeah, there's 17 people that ran through your test. 
Like I'm not sure that I would pay attention to that. Okay, UX testing sessions. I think these are the most important thing that you can do. It's really, really simple but, but, but it can be really painful. Number one, get someone to use your product or service in front of you, in person, whether that's on your phone, whether that's sitting in front of a laptop or desktop. Get 'em to use it. Number two, encourage 'em to give open and honest feedback. They will not want to give you open honest feedback because it feels awkward telling someone that their baby's ugly, but, but you have to try your best to encourage open and honest feedback. Number three, ask them to, to perform a task. You are not allowed to touch the phone or keyboard. You're not allowed to do anything once you tell them to perform the task. 
Number four, and this is most difficult, do not say anything. It's really, really, really hard. You will go through extreme agony as they struggle to figure out how the hell to do something really basic. Like sign up for your app and you'll go through all this pain and it'll probably take them two to three minutes and you'll get this visceral gut feeling. You, you are not allowed to touch or tell them to do anything until they successfully complete the task. Even when they ask for your help. It's really, really hard. You only need three to five testing sessions. I think you really only need three to be able to tell the most critical and important UX bugs, if you will, that you have. I'll tell you one story on this. We were about to launch a homepage once and we wanna get those signup form fields down to as few as possible to reduce the friction of signing up to Weebly. 
And so we figured, well you don't really need confirmed password. So, so we got rid of that one. And in fact you don't really need to confirm your email, which used to be a thing. And so we figured, well we could just ask for email and password, that'll be enough. And in the off case, someone mistypes their password that just resets their email and in the chance that someone mistypes both their email and their password, then I guess they're gonna have to create a new account. But that's not that big of a deal. So we, so we, so we put the signup form and it said sign up here in probably like a hundred point font and then it had two fields. It said email, email address, password, and we're about to launch it, but we had the practice of doing this before we launch anything. And so I got a couple people down, they were just friends and I sat in front of the laptop and said, sign up and, and, and these were tech people. And, and about 45 seconds later it turned I, I don't, I don't know how to sign up. 
How, how do you not know how to sign up? It says sign up here in a hundred point font, like what the hell is going on? Another side point people don't read. So, so, and I said, well why don't you know how to sign up? It's right here. And they said, oh that makes so much sense. Well I just didn't look at that 'cause I assumed email password as a login form obviously. So it wasn't a signup form, it was a login form. So we added a gratuitous field that just says your name so that we could have three fields. And all of a sudden people saw it as a signup form, which is incredible. This is the kind of thing we would've never discovered if we hadn't done UX testing. So I would recommend doing it all the time for everything you launch. You don't need that many sessions. 
Okay, here's another question that comes up. When should we launch? There's this whole minimum viable product, which I think is a lot of the thinking is, is is good, it's new since we launch, but I don't really like the word viable because it's kind of insinuating that you're gonna put like the, like just the least crappy thing you can out there. I much prefer the word remarkable. So minimum remarkable product. The product that is the, the least you can build to be remarkable. Alright, so this is a quote from Paul bow height that says launch when your product is better than what's out there. I think this is really important because it, it, it basically incorporates this idea that, that you should build something that's better than anything else out there. And don't launch until you have that. But as soon as you have it, then go ahead and launch. So I think that's the right time to launch prioritizing. Okay, I think this is another important point to make is how do you prioritize? Because in the early days it seems like there's an infinite amount of things to build and you don't have enough time to build any of them. And, and so how do you figure out what the hell to build next? 
I think there's two important points on prioritizing. Number one, there's only one thing that matters. Think about that startup journey from idea to growth stage. Focus only on the thing that gets you to that next stage. Don't focus on anything else. Don't go to conferences, don't like write blog posts, don't read the news. Now I'm telling you this 'cause like I did all those things. It's impossible not to, but just don't if you can. Don't do any of them. Don't do any of the things that aren't getting you to your next milestone in this particular case. Next milestone being product market fit. Number two I think is a really interesting point. I heard this from Astro Teller who ran Google X and Mo. Most people prioritize, almost everyone prioritizes their list exactly the same way, which is effectively some kind of spreadsheet of all the tasks you can do. 
And then the difficulty of each and then the expected payoff of each how, how impactful, right? And so, and and then you basically sort by cost times benefit. But instead I think when you're trying to make continuous improvement, that's actually a pretty good approach when you're trying to make discontinuous improvement optimized for learning. So basically ask yourself, what is my biggest unknown right now? What's the number one thing that I do not know, you know, about my business that I need to learn, optimize to learn that thing. Because when you do that, it might not seem like the biggest thing, it might be a low effort task, it might seem like a low priority task, but when you optimize to learn the most, what do you do? You rewrite your whole priority list. Because when you learn that thing that actually completely, you throw out all your old priorities and have a new list of new ones. 
Okay, how do I know when I've achieved product market fit? This is another common question. So I think there's basically three key metrics you should be tracking. Number one, returning usage, number two N P Ss. And number three, paying customer renewal rates. So returning usage is basically just look at people who sign up or come to your site or your app and look at the number of people who come back within a day, within three days, within seven days, within 30 days, right? If you track that metric more than anything else, that is the indicator that things are working in the early stages. I remember handing out Weebly logins to all my friends and family and none of them came back. And those are the people who like you the most. And those are the people who would really want you to be successful. And if they're not coming back then no one's gonna come back. 
And so I think number one, tracking returning usage is really important. Number two, track, n p Ss, there's all kinds of tools to do this now here. N p s, some people say 40, I think about 50. If it's above 50 then you probably achieve product market fit N P s. If you ever answered that question, would you recommend this product or service to a friend? That's n p s. It's one question you rank from zero to 10. Basically the percentage of people who answer nine or 10, those are promoters. The percentage of people who answer zero to six, those are detractors and people who answer seven or eight are thrown out. So in the early days, we believe had in n p s of 80%, that was basically 88% of people answered. Nine or 10, 8% of people answered zero to six. And if my math is right, 12% of people answered seven or eight. 
So you basically take that 88% minus 8% equals 80. If it's above 50, you're doing pretty well. The way this metric is built, it can get negative and that's probably where it will start. And then number three, paying customer renewal rates. So when you have paying customers look at their renewal rates. A quick sidebar, I don't like the churn metric for looking at this, A lot of people use that 'cause it's easier to calculate. But basically churn is not cohort based renewals, cohort based. So churn is just looking at number of subscribers lost divided by total active subscribers in any given period. I don't like that because if your denominator is changing, like let's say you're growing really, really quickly, your denominator is changing faster than your nu numerator. The numerator is based on last year's denominator. And so basically it's, it's it, it could be deceptive as to what your actual churn is, but your renewal rates are great 'cause that's looking for the number, the percentage of people who are eligible to renew and what percentage of those people actually renewed. 
And that's cohort pay. So I like renewal rates a lot better. Alright, next metrics that aren't included. So number one metric that is not included is signups. This is something that was not very well understood when we got started. I would not pay that much attention to signups. I would pay a lot of attention to active users. If you have good returning usage, then signups translates to active users pretty well. If you have bad returning usage, then signups basically like completely drops off and you have very little active users. In fact, that number may even be shrinking even when your signups are growing if people aren't returning. Number two, conversion rate. If, if you're thinking of building a SaaS business, conversion rates, they all start low. They build over time. I wouldn't pay a lot of attention to conversion rate in the beginning. I'd pay attention to some of the other metrics. 
I, I think this is the last point, just how does it feel when you get product market fit. You'll know when you achieved it, when your customers are beating a path to your door when you don't have it, everything feels hard. It feels, feels like you're pushing this huge rock up a mountain. You are pushing your customers towards a solution. They're too nice to tell you no, but they're not really coming back, they're not really using it. When you have it, the whole world is beating a path to your door. Everyone wants to use it. You press is writing about it, everything feels easy, and every decision you make feels like you're a genius because they all go well, you know, spoiler alert, it's somewhere in between. It turns out that, you know, as you're scaling your business over time you'll discover you're maybe a little less smart than you thought you were. 
But, but, but that comes later. But I think th this is what it feels like. So if you're not feeling that, you know, sort of customer's pulling you in a direction world, be, you know, beating a path to your door, then you probably don't have it yet. All right, now a couple more points beyond product market fit. This is a little bit more theoretical. I think the most important is just the very sort of tactical, like how do you go and build a product? Just talk to customers, listen to their problems, not their solutions. Iterate a ton and then keep launching until you get something out there. Focus on a couple key metrics, but a couple points I wanna make. Number one, there's, there's fundamentally three things that a startup needs to do in order to be successful. And this is a little bit past just product market fit number one, product needs to be meaningfully better than the alternatives. 
I think this is sort of described in the Paul Bhe quote of launch, when what you have is better than anything else out there. Number two, you'll need to learn how to acquire customers in a differentiated way that scales. And number three, you'll need to invent your business model without killing your traction. This gets into a little bit more than product market fit, an expanded version here, but basically product, market, channel model fit. And what, what, what this goes to show is like you can build a product that works really well for a market, but the model's busted, right? Your, your, you're, you're the model, the way that you charge people, you know, doesn't work. Maybe you're not charging enough, maybe you're charging too much that has a lot of interplay with your channel and this is how you acquire customers, right? So if your model, if if for example, if you're building a solution and you're trying to charge $75 a month for it, that's probably gonna be a pretty tough spot to businesses. 
'cause you're gonna be in the middle, you're not gonna be able to afford a Salesforce, right? You're not gonna be able to afford actual people selling your product to the customers directly. But it's too much money that people are gonna want to just whip out their credit card and start paying that, right? And so that's why oftentimes, you know, between the model and the channel, there needs to be a fit there as well. Because if you're gonna, if you're gonna have a Salesforce, you're probably need to charge people at least two to $300 a month to be able to afford the Salesforce. And if you aren't gonna have a Salesforce, then you should probably charge $25 a month or less. This all of course plays with the product and market fit, which is, which is how this all works together. So there, there's a essay here, which is the HubSpot Growth Framework, which I'd highly recommend reading for a little bit more on this. 
Another sidebar is on scaling the team. So I think this is a really important point to make. Don't scale the team until you have product market fit. So I would not scale past about 20 people. So around 20 people, it's usually between about 23 and 25 is when everything breaks in a startup because you can no longer be just, just, you know, completely flat. If you look at any of the essays, you know, if you look at, you know, back in the day 37 signals had this essay of like how being a perfectly flat company is amazing and no one ever needs to hire managers. And it's like I could predict to within one or two employees exactly the size you are. And it's about 23 to 25. And it turns out that was true because about 23 to 25 it feels amazing, it's completely flat, just another couple people and everything breaks. 
What you need to do is you need to start implementing your first layers of management. And it turns out that that structure is not very good for finding product market fit. It's not very optimal for that. So keep your team small. I would say it's okay to micromanage a little bit at this stage. You should know everything that's going on. You should know everything important there is to know about your customers, your product, your market, your channels. You should know all of that. What does that mean? That helps you make really great decisions, right? Because you have all this information, it's actually a huge advantage. Once a company scales up, then all this knowledge is distributed across people and it's really difficult to get all that knowledge to make a really good decision in one spot when it's scattered across a bunch of different people and takes a lot of different opinions to get something done. 
So don't delegate anything important yet. However, once you've achieved product market fit, and I think this is a mistake that, that we made scale aggressively once you've achieved product market fit. So at this point, presumably you've either found or created a new market, but it's likely you're not the only one. You know, you may not have heard of your competitors yet, but there's probably other people out there doing the same thing. You are in a race to capture this new market and advantages accrue to the number one player they always do. Even if there's not network effects in your business. Just having more people can build products faster, that generates more revenue, that attracts more financing, that allows you to hire more people that generates more revenue. So there's all these kind of flywheels and cycles and advantages that accrue to the number one company, be that company, build a team aggressively but thoughtfully. 
I think that you should probably never more than double the size of your company in any given year. So I don't think I know of an example of hypergrowth that works out of companies that go from 20, you know, 20 employees to 300 in a year. And that works out because what, what you end up doing is you build a foundation on, on sand based on really shaky soil and it all, eventually it's all great while you're scaling and eventually the skyscraper comes crashing down. And that always seems to happen. You will need to completely change the way that you work, including a lot more delegating at this point and no more micromanagement after you do that. So there's kind of this inflection point in scaling a company. I think it's really important to think about because I would not scale a company past about 20 people before you have product market fit. 
As soon as you found it, go and scale aggressively as you can. And then lastly, I'll talk a little bit about building a brand because I don't think it's worth spending too much time thinking about, but I think it's worth spending some time thinking about when you're in the early stages. So great brands are built around a fundamental insight, a consumer insight that some truth that's just not really acknowledged out there. And ideally this is the same one that your product is built on. So it's really, really powerful if you can identify that insight early on, know what you stand for and build that into all of your messaging, build that through into your product and that becomes the foundation in your brand. So lemme give you one example. I talked to the person who built Virgin America's brand. 
And so, so here was their story. So when they got started they were, they were doing a startup airline, there are lots of economies of scale in airlines. And so they did, they, they went out and started talking to customers and they realized that there's only four reasons why people select one airline over another. The reasons were schedule price. So again, if it was $3 cheaper, I'll select that airline. It was destination. So if you wanna fly to S F O or Oakland, and it was frequent flyer programs and they looked at each one of those and said, we're not gonna win, we can't win. It's impossible to win on any of these. So they said, okay, well what's our market thesis? Like, what are we gonna do differently? And then they went out there and talked to lots of people and they said, you know what? 
The experience of flying sucks. The experience of flying really, really sucks. So why don't we create an airline where it's not gonna be a super premium airline, but it might cost $15 more for that ticket, but it's gonna be an amazing flying experience. That was their brand, that was their product and their brand. They built it in right from the very beginning and everything that they did revolved around that flying experience. So that's why you make a decision to invest in the super cool lighting that doesn't make any sense financially, right? But that is exactly about the flying experience. That's why you're gonna go and pay your staff more and they're gonna have a really great attitude as they're serving the flyers. That's why for every single PR event that they ever did, they did it on an airplane because they wanna highlight that flying experience and they create a new reason for people to buy their tickets. And they were very successful at doing that. So I think it's one thing to understand is I, I wouldn't spend too much time overthinking this, but to the extent that you can understand what is that insight, it should be infused in both your product and that becomes the basis for your brand over time. So that is it. I think I'll take a pause there and that's it. So any questions? 

Now Starts the Question and answer section

Guest Question: So you said time to fight for market, you like eight months. What kept you motivated? What was the biggest that kept you working eight months? 

David Rusenko: Yeah, so the question is it took 18 months to find product market fit and what motivated us? And, and, and, and I like to say that it was just that we were young and stupid, which is super helpful. But I think I I, my my theory on entrepreneurs is that a lot of people think that entrepreneurs are risk takers. I don't actually think most entrepreneurs I know are heavy risk takers. I think they're calculated risk takers. I think that entrepreneurs are really two primary qualities. Number one is they're optimists, so they don't see risks where other people see risks. And number two is they're determined. So they just don't give up. So I think if, you know, generally speaking, those are the two things. Your company only fails when you give up, right? And while you're still working on it, by definition it's still going. And so I think, I think having that determination, I, I wouldn't, I wouldn't blindly plot on when all of the evidence shows that, that this is not gonna work out. But, but, but I think just continue to be determined and knowing, just having the confidence and knowing like this is something people need and just continue to work on it is, is key. 

Guest Question:So common advice we get is talking niche audience, very specific audience. So any cases, like how did you approach that early days? This is where everyone, 

David Rusenko: Yeah, so the question is like, common advice is target niche audience or verticalized, right? Which is, which is another way to say that. I think, you know, you're right, Webi has been an anti-pattern, you know, kind, kind of, kind of runs counter that pattern. I think, I'm not a hundred percent sure why, but I think it's because in our particular case, the, the verticals were not deep enough to be able to support the pretty heavy investment that you need to make in the product. And so basically every single person required actually a ton of functionality. It was, we need blogging, we need e-commerce, we need, you know, forms, we need, you know, like a full c m Ss, we need all these things and we need it to be best class, you know, world class. And every single vertical wanted that. And no vertical was deep enough to fully support that on their own. So the, the the, the pattern of what happened to Weebly and just, you know, website builders or, or e-commerce platforms in general is that we, is that we all started off very horizontal and built a platform and then over time, once all that functionality was built out, then we started to customize the verticals. So I think that that's what worked in our case, but, but building to a specific vertical is generally good advice. 

Guest Question: Thank you for all you're sharing with us. Looking back on the notes, you mentioned that at some point you have to create a market. When you figured out that hidden need, what changed and what were you telling people to either ask 'em questions or sell 'em on you having this new secret in need in the market that none of them knew they needed? 

David Rusenko: Yeah, so, so the question is, when you're creating a market, what changed to tell to telling people like you have this new thing that they didn't know they needed? I think, I think the experience is, is likely to be similar for everyone, which is, which is basically the first chunk. So I'd say the first three to four years of Weebly's history, we were mostly just trying, like, I remember telling reporters like, you just, why? They're like, why do we need to write a story? And I was like, you need to write a story because no one realizes this is possible, right? No one is so, so the first three to four years were us just trying to convince people like, no, you really can build a website like this is possible. 'cause everyone, I mean everyone assumed unless they knew how to code, everyone assumed that is beyond my capabilities, that is beyond my abilities. 
So we spent four years probably just trying to tell people and then eventually little by little people try it, people try it. And then that's, that's that market created. It's that kind of boom moment when all of a sudden people realize that this is possible. You know, I think another probably great example would be either Uber or Airbnb, right? Like Airbnb was something that I remember even early on I was like, I don't really wanna stay with other people. That sounds weird. Like I don't want to get in someone else's car. Like that's shady. But then all of a sudden, like, you know, the word just kind of gets around. You try it once enough people try it once they really enjoy the experience, word gets around once it does, that's that, that's that sort of that big bang moment, right? Where the market's kind of created. And then at that point your problems are completely different. At that point you don't need to convince anyone anymore because people just think it's gonna be inevitable. But then your problems are more about scaling and, you know, continuing to find, refine the product at that point. 

Guest Question: Thank you. Can you talk about your key KPIs during that 18 months of period? What if you were measuring to make sure that you are moving the right direction? 

David Rusenko: Yeah, so, so the question is on the key KPIs during that 18 month period, the, the, the, the sad answer is we were not monitoring them. We were not measuring 'em. And that's probably why it took us 18 months. It probably could have been a lot shorter. I think we were looking at signups, which was kind of the thing that most people were looking at at that point in time. And it's a very poor metric. I think if, if you look at how our signups would convert to active users, that was very low. If you would look at how our signups were trending sort of on a daily and weekly basis, that was trending down. So by all accounts we didn't have product market fit and we knew we didn't have product market fit. It wasn't like a big surprise. So, so it was really just a matter of continuing to iterate, continue to iterate until you finally get something that, that clicks. 

Guest Question: Can you talk to us a little bit about your pricing and the journey that you went through with pricing in the beginning? 

David Rusenko: Sure. So, so the question is on pricing and what's a journey we went through? I think people are a lot more rational about pricing today than when we got started because in, in 2007 and 2008, the prevailing thinking in Silicon Valley was that you shouldn't actively not charge money. You should actively be not making money. That was the prevailing thinking. It sounds really, really crazy now, but at the time the logic went that Twitter was the example that if you charged money then you would have revenues. And once you had revenues, they, they wouldn't be that big. And then you'd just be valued on a multiple of your revenues. So way better to sell the dream and not show any revenues than to make money and then have your valuation come down. So that's what people thought at the time. And we, we started out by not charging any money, so it was just completely free from, basically when we launched in 2006 through the summer of 2008, we, I, I'm, I'm not even kidding, we had people who would just unsolicited just mail us a check for a hundred bucks. 
'cause they were like, you're gonna run outta money like you need, I'm just gonna give you money. And like, and, and we're like, thanks. But like it was a completely free product. There's no way to give us money unless you mail us a check. And, and then we knew we were gonna run outta money from the round that we raised in around September of 2009 in, sorry, September, 2008. In January of 2008, we decided to try to make money because we figured making money was much cooler than raising another round. So we worked for six months from January to June on, on launching Weebly Pro, which was the first version. It was $4 a month and it was the first version that, that you could pay us any money for. We had all of our friends over in our, in our apartment the night before we launched it, and we all took Betts on clearly how many millions of dollars we were gonna be making the next day. Like it was like as soon as we pressed that button, it was just gonna come, flowing in and, and then we launched it the next day and then after a week we looked at the sales and it turns out that we made 10 times less than the lowest bet. 
So it was like, okay, I guess it's not gonna work out quite that well that fast. But then we, you know, we kept iterating, we kept growing from June of 2008 to December, we almost ran outta money again, but, but had the option of cutting the founder's salaries. And so we're going, we're gonna be cashflow positive. We basically became cashflow positive in January, 2009. And more or less were through the rest of the history of the company. 

Guest Question: First of all, thanks a lot for doing this. I'm a user of we ever since, I don't know, I don't even remember now. So I know the old interface I, a new interface. So thanks for building it. In my personal experience and my experience of working with website technology before I've seen that users actually use it for one or two weeks, three weeks stops, they kind of take problem. So in that case, how did you actually calculate active usage? Because even if it's a real user, your customer just flake off in three. 

David Rusenko: Yeah. So, so, so the question is, it, it's awesome that you're a Weebly user, sort of how do you calculate active usage when people flake off? I think you can still calculate the same way, and I think it's still a valuable metric. So there, there, there, there is a question with, with talking to inside baseball with website builders of are they successfully using your product even if they're not coming back every single day and maybe they come back once every six months? I still think it's useful to look at the metric because, because otherwise you're just flying blind. 

Guest Question: Could you talk a little bit more about the, the s discontinue improvement? I think that's a kind of a black that a lot of the continuous improve also. 

David Rusenko: Yeah. So, so the question is around the, the, just the, the, the word discontinuous improvement and like what does that mean? And, and a lot of the writing's about continuous improvement, I think di discontinuous improvement is, is effectively when you're making a big leap. Not, and, and sometimes small incremental improvements don't get you to that big leap, right? And so I think, you know, imagine yourself starting with the Palm Trio, right? And you're trying to make continuous improvement, right? Like what would you do? Like you'd improve the OSS a little bit, maybe you'd improve, you know, the way the apps can exist a little bit. Maybe you would take that keyboard and just like make the, you know, clicking a little bit better or the typing a little bit better, whatever it is. But I think by definition, if you're gonna create a new market, oftentimes it's discontinuous improvement. And what that means is, is taking a really big leap and taking a really big leap doesn't often happen the same way as taking small steps. And so I think, you know, again, it's, it's, it's really about fighting that hidden need, figuring out what people want and building that solution. Iterating really quickly on that front, but optimizing for learning. And I think optimizing for learning is sort of the key here where you can say what's the biggest unknown that I have and how do I go about answering that question? 

More Questions. Okay. Two more questions. 


Guest Question: So how do you deal with a demographic split between purchasers and users? Like, we're a hardware company and our primary purchasers are probably going to be kind of Gen X, they want an analog version because they believe it's more reliable and the primary users of the product will be millennials and they all want touch screens, which actually works better for us. And so how do you deal with, you know, convincing people later on, hey, in the tech roadmap we'd actually like to even have, you know, maybe your old equipment back and we'll just give you a new one. 

David Rusenko: Yeah, so, so the, so, so the question is, hardware startup, your purchasers and your users are different demographics and, and they want different things. 

Guest Question: How do you make the transition? 

David Rusenko: Yeah. How, how do you make the transition smooth? I mean, I think I I I I don't have that much information. I, I'm guessing education. Yeah. Oh, what, what coffee. Okay then I have no idea, but I, but if you wanna come talk to me afterwards, we could dig, dig into it a little bit more. Yeah. 

Guest Question: Yeah. Hi. So on your way to product market fit, can you talk about how you think about when to start, you know, the, the whole fundraising process? 

David Rusenko: Oh, yeah, yeah. That's a great question. So on your way to product market fit, when do you start the whole fundraising process? I think so, so I think the most helpful thing to me that I end up explaining to a lot of people is, is look at that slide on the stages of a company. And most companies will not be able to raise money until they're at the early traction phase just entering traction. Now, things may be different for you. You may have some friends and family who may be able to kind of stake you early on, you make it into a, a program like Y Combinator, you, you may be different. That's certainly possible. But most companies, like when you look at those large early rounds that are raised and this company raised $40 million without launching a product, and you're like, I can do that too. 
You can't, that, that's what I thought. It turns out that in all those cases are some kind of history, it's, you know, the, the founder or founders of that company have created massively successful products before, or maybe they're huge, you know, coming in some, some part of the industry or whatever it is. I think if your expectation is that you can't raise around until you get to early traction, that's probably a realistic expectation. And then at that point, sort of what are the implications of that, right? So how the hell do you get to early traction without raising money, right? It's a chicken, it, it's, it's sort of this chicken and egg problem. Everyone solves it differently, right? Like everyone wound up solving it differently. It's really, really hard though. And I think the key, the, the way that a lot of people solve it is just, you know, effectively sweat equity. It's just getting a few really smart people together who can build what they need to build without anyone else, without outsourcing, without hiring anyone else, and keeping their burn really, really low and basically locking themselves in a room and, and continue to just build as quickly as they can until, until they get to that point. And it looks like you have a follow up. 

Guest Question: Yeah. So I mean, you know, on one side we say that you have, you know, launch after you have something that is better than what it basically means. Like, 

David Rusenko: No, no. So, so the question is launch launch when you have something that's better than what's out there, which which means a full blown product. No, I, I think, you know, maybe this is something I could add in here. Don't, don't look at your product in terms of like a feature grid, like a feature checklist. If you think about it like that, you can never win because you're behind and you can never catch up. And especially if you're comparing to like, like, like I like this phrase of like customers over competitors because if you're looking at what your competitors are doing right, then you're inherently following because whatever they've just launched, they started building three months ago, right? And so by the time you build that and you launch that, then they're gonna be launching the new thing. And it could be, you know, I remember one of our competitors, I won't name them, but, but, but they're from South Africa and they had raised 40 million bucks and we had raised 650 k and they, things were not going that great for them. 

And so they completely ripped off our interface and they just completely cloned it and launched it. And I was like, we were laughing our asses off because we were about to launch an update where at the time that sidebar with the elements was on top and we were about to put it on, we were about to put it on the left, right? We had spent a lot of time building that and they launched like two weeks before we built it, right? And so I think you have to be focused on your customers, not your competitors. And it's not about the feature grid because there's gonna be one particular feature or one aspect of your product. Maybe it's the, the ease use and the usability that opens it up to a new market. Maybe it's one feature that people are just killing for that's gonna, that's gonna make up for the lack of the rest. And so people are gonna look at that and say, well it doesn't have X, Y, Z, which I do kind of want and those other products do, but this is the one thing that I need and they're gonna come and use your product for that. So it's not that your product has more features than anyone else, it's that your product does that one thing, that one job they're trying to do. It does that better than anyone else. 

Thanks guys. 

Okay, that concludes today. Sorry that we ran a little late. It's hard to constrain fantastic speakers from getting through the material and all the great questions you guys are asking. Next week, Sue Al Doshi and Gusav Stromer from Mixpanel and Y Combinator respectively. We'll continue on our dive into product, talking about measurement and growth to very important things. And we'll also be posting another video of a conversation this week that Adora is going to have with Usma Gar the founder of Gobble. And they like the Bee Gees are going to be talking about staying alive if anyone gets that reference. All right, thanks everyone. Thank you.
